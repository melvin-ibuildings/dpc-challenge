{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"./BaseTexture","loc":{"line":7,"column":27}},{"name":"./VideoBaseTexture","loc":{"line":11,"column":32}},{"name":"./TextureUvs","loc":{"line":15,"column":26}},{"name":"eventemitter3","loc":{"line":19,"column":28}},{"name":"../math","loc":{"line":23,"column":20}},{"name":"../utils","loc":{"line":25,"column":21}},{"name":"../settings","loc":{"line":27,"column":24}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTexture = require('./BaseTexture');\n\nvar _BaseTexture2 = _interopRequireDefault(_BaseTexture);\n\nvar _VideoBaseTexture = require('./VideoBaseTexture');\n\nvar _VideoBaseTexture2 = _interopRequireDefault(_VideoBaseTexture);\n\nvar _TextureUvs = require('./TextureUvs');\n\nvar _TextureUvs2 = _interopRequireDefault(_TextureUvs);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _math = require('../math');\n\nvar _utils = require('../utils');\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A texture stores the information that represents an image or part of an image. It cannot be added\n * to the display list directly. Instead use it as the texture for a Sprite. If no frame is provided\n * then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * let texture = PIXI.Texture.fromImage('assets/image.png');\n * let sprite1 = new PIXI.Sprite(texture);\n * let sprite2 = new PIXI.Sprite(texture);\n * ```\n *\n * Textures made from SVGs, loaded or not, cannot be used before the file finishes processing.\n * You can check for this by checking the sprite's _textureID property.\n * ```js\n * var texture = PIXI.Texture.fromImage('assets/image.svg');\n * var sprite1 = new PIXI.Sprite(texture);\n * //sprite1._textureID should not be undefined if the texture has finished processing the SVG file\n * ```\n * You can use a ticker or rAF to ensure your sprites load the finished textures after processing. See issue #3068.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\nvar Texture = function (_EventEmitter) {\n    _inherits(Texture, _EventEmitter);\n\n    /**\n     * @param {PIXI.BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {PIXI.Rectangle} [orig] - The area of original texture\n     * @param {PIXI.Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link PIXI.GroupD8}\n     */\n    function Texture(baseTexture, frame, orig, trim, rotate) {\n        _classCallCheck(this, Texture);\n\n        /**\n         * Does this Texture have any frame data assigned to it?\n         *\n         * @member {boolean}\n         */\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        _this.noFrame = false;\n\n        if (!frame) {\n            _this.noFrame = true;\n            frame = new _math.Rectangle(0, 0, 1, 1);\n        }\n\n        if (baseTexture instanceof Texture) {\n            baseTexture = baseTexture.baseTexture;\n        }\n\n        /**\n         * The base texture that this texture uses.\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        _this.baseTexture = baseTexture;\n\n        /**\n         * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n         * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this._frame = frame;\n\n        /**\n         * This is the trimmed area of original texture, before it was put in atlas\n         * Please call `_updateUvs()` after you change coordinates of `trim` manually.\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.trim = trim;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = false;\n\n        /**\n         * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n         *\n         * @member {boolean}\n         */\n        _this.requiresUpdate = false;\n\n        /**\n         * The WebGL UV data cache.\n         *\n         * @member {PIXI.TextureUvs}\n         * @private\n         */\n        _this._uvs = null;\n\n        /**\n         * This is the area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.orig = orig || frame; // new Rectangle(0, 0, 1, 1);\n\n        _this._rotate = Number(rotate || 0);\n\n        if (rotate === true) {\n            // this is old texturepacker legacy, some games/libraries are passing \"true\" for rotated textures\n            _this._rotate = 2;\n        } else if (_this._rotate % 2 !== 0) {\n            throw new Error('attempt to use diamond-shaped UVs. If you are sure, set rotation manually');\n        }\n\n        if (baseTexture.hasLoaded) {\n            if (_this.noFrame) {\n                frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.on('update', _this.onBaseTextureUpdated, _this);\n            }\n            _this.frame = frame;\n        } else {\n            baseTexture.once('loaded', _this.onBaseTextureLoaded, _this);\n        }\n\n        /**\n         * Fired when the texture is updated. This happens if the frame or the baseTexture is updated.\n         *\n         * @event PIXI.Texture#update\n         * @protected\n         * @param {PIXI.Texture} texture - Instance of texture being updated.\n         */\n\n        _this._updateID = 0;\n\n        /**\n         * Contains data for uvs. May contain clamp settings and some matrices.\n         * Its a bit heavy, so by default that object is not created.\n         * @type {PIXI.TextureMatrix}\n         * @default null\n         */\n        _this.transform = null;\n\n        /**\n         * The ids under which this Texture has been added to the texture cache. This is\n         * automatically set as long as Texture.addToCache is used, but may not be set if a\n         * Texture is added directly to the TextureCache array.\n         *\n         * @member {string[]}\n         */\n        _this.textureCacheIds = [];\n        return _this;\n    }\n\n    /**\n     * Updates this texture on the gpu.\n     *\n     */\n\n\n    Texture.prototype.update = function update() {\n        this.baseTexture.update();\n    };\n\n    /**\n     * Called when the base texture is loaded\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureLoaded = function onBaseTextureLoaded(baseTexture) {\n        this._updateID++;\n\n        // TODO this code looks confusing.. boo to abusing getters and setters!\n        if (this.noFrame) {\n            this.frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        } else {\n            this.frame = this._frame;\n        }\n\n        this.baseTexture.on('update', this.onBaseTextureUpdated, this);\n        this.emit('update', this);\n    };\n\n    /**\n     * Called when the base texture is updated\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureUpdated = function onBaseTextureUpdated(baseTexture) {\n        this._updateID++;\n\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n\n        this.emit('update', this);\n    };\n\n    /**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */\n\n\n    Texture.prototype.destroy = function destroy(destroyBase) {\n        if (this.baseTexture) {\n            if (destroyBase) {\n                // delete the texture if it exists in the texture cache..\n                // this only needs to be removed if the base texture is actually destroyed too..\n                if (_utils.TextureCache[this.baseTexture.imageUrl]) {\n                    Texture.removeFromCache(this.baseTexture.imageUrl);\n                }\n\n                this.baseTexture.destroy();\n            }\n\n            this.baseTexture.off('update', this.onBaseTextureUpdated, this);\n            this.baseTexture.off('loaded', this.onBaseTextureLoaded, this);\n\n            this.baseTexture = null;\n        }\n\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n\n        this.valid = false;\n\n        Texture.removeFromCache(this);\n        this.textureCacheIds = null;\n    };\n\n    /**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {PIXI.Texture} The new texture\n     */\n\n\n    Texture.prototype.clone = function clone() {\n        return new Texture(this.baseTexture, this.frame, this.orig, this.trim, this.rotate);\n    };\n\n    /**\n     * Updates the internal WebGL UV cache. Use it after you change `frame` or `trim` of the texture.\n     */\n\n\n    Texture.prototype._updateUvs = function _updateUvs() {\n        if (!this._uvs) {\n            this._uvs = new _TextureUvs2.default();\n        }\n\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n\n        this._updateID++;\n    };\n\n    /**\n     * Helper function that creates a Texture object from the given image url.\n     * If the image is not in the texture cache it will be  created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin] - Whether requests should be treated as crossorigin\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with SVG images.\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromImage = function fromImage(imageUrl, crossorigin, scaleMode, sourceScale) {\n        var texture = _utils.TextureCache[imageUrl];\n\n        if (!texture) {\n            texture = new Texture(_BaseTexture2.default.fromImage(imageUrl, crossorigin, scaleMode, sourceScale));\n            Texture.addToCache(texture, imageUrl);\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromFrame = function fromFrame(frameId) {\n        var texture = _utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache');\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {string} [origin='canvas'] - A string origin of who created the base texture\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromCanvas = function fromCanvas(canvas, scaleMode) {\n        var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'canvas';\n\n        return new Texture(_BaseTexture2.default.fromCanvas(canvas, scaleMode, origin));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given video element.\n     *\n     * @static\n     * @param {HTMLVideoElement|string} video - The URL or actual element of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideo = function fromVideo(video, scaleMode) {\n        if (typeof video === 'string') {\n            return Texture.fromVideoUrl(video, scaleMode);\n        }\n\n        return new Texture(_VideoBaseTexture2.default.fromVideo(video, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the video url.\n     *\n     * @static\n     * @param {string} videoUrl - URL of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideoUrl = function fromVideoUrl(videoUrl, scaleMode) {\n        return new Texture(_VideoBaseTexture2.default.fromUrl(videoUrl, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|PIXI.BaseTexture}\n     *        source - Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.from = function from(source) {\n        // TODO auto detect cross origin..\n        // TODO pass in scale mode?\n        if (typeof source === 'string') {\n            var texture = _utils.TextureCache[source];\n\n            if (!texture) {\n                // check if its a video..\n                var isVideo = source.match(/\\.(mp4|webm|ogg|h264|avi|mov)$/) !== null;\n\n                if (isVideo) {\n                    return Texture.fromVideoUrl(source);\n                }\n\n                return Texture.fromImage(source);\n            }\n\n            return texture;\n        } else if (source instanceof HTMLImageElement) {\n            return new Texture(_BaseTexture2.default.from(source));\n        } else if (source instanceof HTMLCanvasElement) {\n            return Texture.fromCanvas(source, _settings2.default.SCALE_MODE, 'HTMLCanvasElement');\n        } else if (source instanceof HTMLVideoElement) {\n            return Texture.fromVideo(source);\n        } else if (source instanceof _BaseTexture2.default) {\n            return new Texture(source);\n        }\n\n        // lets assume its a texture!\n        return source;\n    };\n\n    /**\n     * Create a texture from a source and add to the cache.\n     *\n     * @static\n     * @param {HTMLImageElement|HTMLCanvasElement} source - The input source.\n     * @param {String} imageUrl - File name of texture, for cache and resolving resolution.\n     * @param {String} [name] - Human readible name for the texture cache. If no name is\n     *        specified, only `imageUrl` will be used as the cache ID.\n     * @return {PIXI.Texture} Output texture\n     */\n\n\n    Texture.fromLoader = function fromLoader(source, imageUrl, name) {\n        var baseTexture = new _BaseTexture2.default(source, undefined, (0, _utils.getResolutionOfUrl)(imageUrl));\n        var texture = new Texture(baseTexture);\n\n        baseTexture.imageUrl = imageUrl;\n\n        // No name, use imageUrl instead\n        if (!name) {\n            name = imageUrl;\n        }\n\n        // lets also add the frame to pixi's global cache for fromFrame and fromImage fucntions\n        _BaseTexture2.default.addToCache(texture.baseTexture, name);\n        Texture.addToCache(texture, name);\n\n        // also add references by url if they are different.\n        if (name !== imageUrl) {\n            _BaseTexture2.default.addToCache(texture.baseTexture, imageUrl);\n            Texture.addToCache(texture, imageUrl);\n        }\n\n        return texture;\n    };\n\n    /**\n     * Adds a Texture to the global TextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the Texture will be stored against.\n     */\n\n\n    Texture.addToCache = function addToCache(texture, id) {\n        if (id) {\n            if (texture.textureCacheIds.indexOf(id) === -1) {\n                texture.textureCacheIds.push(id);\n            }\n\n            // @if DEBUG\n            /* eslint-disable no-console */\n            if (_utils.TextureCache[id]) {\n                console.warn('Texture added to the cache with an id [' + id + '] that already had an entry');\n            }\n            /* eslint-enable no-console */\n            // @endif\n\n            _utils.TextureCache[id] = texture;\n        }\n    };\n\n    /**\n     * Remove a Texture from the global TextureCache.\n     *\n     * @static\n     * @param {string|PIXI.Texture} texture - id of a Texture to be removed, or a Texture instance itself\n     * @return {PIXI.Texture|null} The Texture that was removed\n     */\n\n\n    Texture.removeFromCache = function removeFromCache(texture) {\n        if (typeof texture === 'string') {\n            var textureFromCache = _utils.TextureCache[texture];\n\n            if (textureFromCache) {\n                var index = textureFromCache.textureCacheIds.indexOf(texture);\n\n                if (index > -1) {\n                    textureFromCache.textureCacheIds.splice(index, 1);\n                }\n\n                delete _utils.TextureCache[texture];\n\n                return textureFromCache;\n            }\n        } else if (texture && texture.textureCacheIds) {\n            for (var i = 0; i < texture.textureCacheIds.length; ++i) {\n                // Check that texture matches the one being passed in before deleting it from the cache.\n                if (_utils.TextureCache[texture.textureCacheIds[i]] === texture) {\n                    delete _utils.TextureCache[texture.textureCacheIds[i]];\n                }\n            }\n\n            texture.textureCacheIds.length = 0;\n\n            return texture;\n        }\n\n        return null;\n    };\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses.\n     * Please call `_updateUvs()` after you change coordinates of `frame` manually.\n     *\n     * @member {PIXI.Rectangle}\n     */\n\n\n    _createClass(Texture, [{\n        key: 'frame',\n        get: function get() {\n            return this._frame;\n        },\n        set: function set(frame) // eslint-disable-line require-jsdoc\n        {\n            this._frame = frame;\n\n            this.noFrame = false;\n\n            var x = frame.x,\n                y = frame.y,\n                width = frame.width,\n                height = frame.height;\n\n            var xNotFit = x + width > this.baseTexture.width;\n            var yNotFit = y + height > this.baseTexture.height;\n\n            if (xNotFit || yNotFit) {\n                var relationship = xNotFit && yNotFit ? 'and' : 'or';\n                var errorX = 'X: ' + x + ' + ' + width + ' = ' + (x + width) + ' > ' + this.baseTexture.width;\n                var errorY = 'Y: ' + y + ' + ' + height + ' = ' + (y + height) + ' > ' + this.baseTexture.height;\n\n                throw new Error('Texture Error: frame does not fit inside the base Texture dimensions: ' + (errorX + ' ' + relationship + ' ' + errorY));\n            }\n\n            // this.valid = width && height && this.baseTexture.source && this.baseTexture.hasLoaded;\n            this.valid = width && height && this.baseTexture.hasLoaded;\n\n            if (!this.trim && !this.rotate) {\n                this.orig = frame;\n            }\n\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * Indicates whether the texture is rotated inside the atlas\n         * set to 2 to compensate for texture packer rotation\n         * set to 6 to compensate for spine packer rotation\n         * can be used to rotate or mirror sprites\n         * See {@link PIXI.GroupD8} for explanation\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'rotate',\n        get: function get() {\n            return this._rotate;\n        },\n        set: function set(rotate) // eslint-disable-line require-jsdoc\n        {\n            this._rotate = rotate;\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * The width of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'width',\n        get: function get() {\n            return this.orig.width;\n        }\n\n        /**\n         * The height of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this.orig.height;\n        }\n    }]);\n\n    return Texture;\n}(_eventemitter2.default);\n\nexports.default = Texture;\n\n\nfunction createWhiteTexture() {\n    var canvas = document.createElement('canvas');\n\n    canvas.width = 10;\n    canvas.height = 10;\n\n    var context = canvas.getContext('2d');\n\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 10, 10);\n\n    return new Texture(new _BaseTexture2.default(canvas));\n}\n\nfunction removeAllHandlers(tex) {\n    tex.destroy = function _emptyDestroy() {/* empty */};\n    tex.on = function _emptyOn() {/* empty */};\n    tex.once = function _emptyOnce() {/* empty */};\n    tex.emit = function _emptyEmit() {/* empty */};\n}\n\n/**\n * An empty texture, used often to not have to create multiple empty textures.\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\nTexture.EMPTY = new Texture(new _BaseTexture2.default());\nremoveAllHandlers(Texture.EMPTY);\nremoveAllHandlers(Texture.EMPTY.baseTexture);\n\n/**\n * A white texture of 10x10 size, used for graphics and other things\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\nTexture.WHITE = createWhiteTexture();\nremoveAllHandlers(Texture.WHITE);\nremoveAllHandlers(Texture.WHITE.baseTexture);\n//# sourceMappingURL=Texture.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/Texture.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}}],"sources":{"node_modules/pixi.js/lib/core/textures/Texture.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTexture = require('./BaseTexture');\n\nvar _BaseTexture2 = _interopRequireDefault(_BaseTexture);\n\nvar _VideoBaseTexture = require('./VideoBaseTexture');\n\nvar _VideoBaseTexture2 = _interopRequireDefault(_VideoBaseTexture);\n\nvar _TextureUvs = require('./TextureUvs');\n\nvar _TextureUvs2 = _interopRequireDefault(_TextureUvs);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _math = require('../math');\n\nvar _utils = require('../utils');\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A texture stores the information that represents an image or part of an image. It cannot be added\n * to the display list directly. Instead use it as the texture for a Sprite. If no frame is provided\n * then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * let texture = PIXI.Texture.fromImage('assets/image.png');\n * let sprite1 = new PIXI.Sprite(texture);\n * let sprite2 = new PIXI.Sprite(texture);\n * ```\n *\n * Textures made from SVGs, loaded or not, cannot be used before the file finishes processing.\n * You can check for this by checking the sprite's _textureID property.\n * ```js\n * var texture = PIXI.Texture.fromImage('assets/image.svg');\n * var sprite1 = new PIXI.Sprite(texture);\n * //sprite1._textureID should not be undefined if the texture has finished processing the SVG file\n * ```\n * You can use a ticker or rAF to ensure your sprites load the finished textures after processing. See issue #3068.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\nvar Texture = function (_EventEmitter) {\n    _inherits(Texture, _EventEmitter);\n\n    /**\n     * @param {PIXI.BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {PIXI.Rectangle} [orig] - The area of original texture\n     * @param {PIXI.Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link PIXI.GroupD8}\n     */\n    function Texture(baseTexture, frame, orig, trim, rotate) {\n        _classCallCheck(this, Texture);\n\n        /**\n         * Does this Texture have any frame data assigned to it?\n         *\n         * @member {boolean}\n         */\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        _this.noFrame = false;\n\n        if (!frame) {\n            _this.noFrame = true;\n            frame = new _math.Rectangle(0, 0, 1, 1);\n        }\n\n        if (baseTexture instanceof Texture) {\n            baseTexture = baseTexture.baseTexture;\n        }\n\n        /**\n         * The base texture that this texture uses.\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        _this.baseTexture = baseTexture;\n\n        /**\n         * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n         * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this._frame = frame;\n\n        /**\n         * This is the trimmed area of original texture, before it was put in atlas\n         * Please call `_updateUvs()` after you change coordinates of `trim` manually.\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.trim = trim;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = false;\n\n        /**\n         * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n         *\n         * @member {boolean}\n         */\n        _this.requiresUpdate = false;\n\n        /**\n         * The WebGL UV data cache.\n         *\n         * @member {PIXI.TextureUvs}\n         * @private\n         */\n        _this._uvs = null;\n\n        /**\n         * This is the area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.orig = orig || frame; // new Rectangle(0, 0, 1, 1);\n\n        _this._rotate = Number(rotate || 0);\n\n        if (rotate === true) {\n            // this is old texturepacker legacy, some games/libraries are passing \"true\" for rotated textures\n            _this._rotate = 2;\n        } else if (_this._rotate % 2 !== 0) {\n            throw new Error('attempt to use diamond-shaped UVs. If you are sure, set rotation manually');\n        }\n\n        if (baseTexture.hasLoaded) {\n            if (_this.noFrame) {\n                frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.on('update', _this.onBaseTextureUpdated, _this);\n            }\n            _this.frame = frame;\n        } else {\n            baseTexture.once('loaded', _this.onBaseTextureLoaded, _this);\n        }\n\n        /**\n         * Fired when the texture is updated. This happens if the frame or the baseTexture is updated.\n         *\n         * @event PIXI.Texture#update\n         * @protected\n         * @param {PIXI.Texture} texture - Instance of texture being updated.\n         */\n\n        _this._updateID = 0;\n\n        /**\n         * Contains data for uvs. May contain clamp settings and some matrices.\n         * Its a bit heavy, so by default that object is not created.\n         * @type {PIXI.TextureMatrix}\n         * @default null\n         */\n        _this.transform = null;\n\n        /**\n         * The ids under which this Texture has been added to the texture cache. This is\n         * automatically set as long as Texture.addToCache is used, but may not be set if a\n         * Texture is added directly to the TextureCache array.\n         *\n         * @member {string[]}\n         */\n        _this.textureCacheIds = [];\n        return _this;\n    }\n\n    /**\n     * Updates this texture on the gpu.\n     *\n     */\n\n\n    Texture.prototype.update = function update() {\n        this.baseTexture.update();\n    };\n\n    /**\n     * Called when the base texture is loaded\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureLoaded = function onBaseTextureLoaded(baseTexture) {\n        this._updateID++;\n\n        // TODO this code looks confusing.. boo to abusing getters and setters!\n        if (this.noFrame) {\n            this.frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        } else {\n            this.frame = this._frame;\n        }\n\n        this.baseTexture.on('update', this.onBaseTextureUpdated, this);\n        this.emit('update', this);\n    };\n\n    /**\n     * Called when the base texture is updated\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureUpdated = function onBaseTextureUpdated(baseTexture) {\n        this._updateID++;\n\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n\n        this.emit('update', this);\n    };\n\n    /**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */\n\n\n    Texture.prototype.destroy = function destroy(destroyBase) {\n        if (this.baseTexture) {\n            if (destroyBase) {\n                // delete the texture if it exists in the texture cache..\n                // this only needs to be removed if the base texture is actually destroyed too..\n                if (_utils.TextureCache[this.baseTexture.imageUrl]) {\n                    Texture.removeFromCache(this.baseTexture.imageUrl);\n                }\n\n                this.baseTexture.destroy();\n            }\n\n            this.baseTexture.off('update', this.onBaseTextureUpdated, this);\n            this.baseTexture.off('loaded', this.onBaseTextureLoaded, this);\n\n            this.baseTexture = null;\n        }\n\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n\n        this.valid = false;\n\n        Texture.removeFromCache(this);\n        this.textureCacheIds = null;\n    };\n\n    /**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {PIXI.Texture} The new texture\n     */\n\n\n    Texture.prototype.clone = function clone() {\n        return new Texture(this.baseTexture, this.frame, this.orig, this.trim, this.rotate);\n    };\n\n    /**\n     * Updates the internal WebGL UV cache. Use it after you change `frame` or `trim` of the texture.\n     */\n\n\n    Texture.prototype._updateUvs = function _updateUvs() {\n        if (!this._uvs) {\n            this._uvs = new _TextureUvs2.default();\n        }\n\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n\n        this._updateID++;\n    };\n\n    /**\n     * Helper function that creates a Texture object from the given image url.\n     * If the image is not in the texture cache it will be  created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin] - Whether requests should be treated as crossorigin\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with SVG images.\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromImage = function fromImage(imageUrl, crossorigin, scaleMode, sourceScale) {\n        var texture = _utils.TextureCache[imageUrl];\n\n        if (!texture) {\n            texture = new Texture(_BaseTexture2.default.fromImage(imageUrl, crossorigin, scaleMode, sourceScale));\n            Texture.addToCache(texture, imageUrl);\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromFrame = function fromFrame(frameId) {\n        var texture = _utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache');\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {string} [origin='canvas'] - A string origin of who created the base texture\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromCanvas = function fromCanvas(canvas, scaleMode) {\n        var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'canvas';\n\n        return new Texture(_BaseTexture2.default.fromCanvas(canvas, scaleMode, origin));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given video element.\n     *\n     * @static\n     * @param {HTMLVideoElement|string} video - The URL or actual element of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideo = function fromVideo(video, scaleMode) {\n        if (typeof video === 'string') {\n            return Texture.fromVideoUrl(video, scaleMode);\n        }\n\n        return new Texture(_VideoBaseTexture2.default.fromVideo(video, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the video url.\n     *\n     * @static\n     * @param {string} videoUrl - URL of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideoUrl = function fromVideoUrl(videoUrl, scaleMode) {\n        return new Texture(_VideoBaseTexture2.default.fromUrl(videoUrl, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|PIXI.BaseTexture}\n     *        source - Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.from = function from(source) {\n        // TODO auto detect cross origin..\n        // TODO pass in scale mode?\n        if (typeof source === 'string') {\n            var texture = _utils.TextureCache[source];\n\n            if (!texture) {\n                // check if its a video..\n                var isVideo = source.match(/\\.(mp4|webm|ogg|h264|avi|mov)$/) !== null;\n\n                if (isVideo) {\n                    return Texture.fromVideoUrl(source);\n                }\n\n                return Texture.fromImage(source);\n            }\n\n            return texture;\n        } else if (source instanceof HTMLImageElement) {\n            return new Texture(_BaseTexture2.default.from(source));\n        } else if (source instanceof HTMLCanvasElement) {\n            return Texture.fromCanvas(source, _settings2.default.SCALE_MODE, 'HTMLCanvasElement');\n        } else if (source instanceof HTMLVideoElement) {\n            return Texture.fromVideo(source);\n        } else if (source instanceof _BaseTexture2.default) {\n            return new Texture(source);\n        }\n\n        // lets assume its a texture!\n        return source;\n    };\n\n    /**\n     * Create a texture from a source and add to the cache.\n     *\n     * @static\n     * @param {HTMLImageElement|HTMLCanvasElement} source - The input source.\n     * @param {String} imageUrl - File name of texture, for cache and resolving resolution.\n     * @param {String} [name] - Human readible name for the texture cache. If no name is\n     *        specified, only `imageUrl` will be used as the cache ID.\n     * @return {PIXI.Texture} Output texture\n     */\n\n\n    Texture.fromLoader = function fromLoader(source, imageUrl, name) {\n        var baseTexture = new _BaseTexture2.default(source, undefined, (0, _utils.getResolutionOfUrl)(imageUrl));\n        var texture = new Texture(baseTexture);\n\n        baseTexture.imageUrl = imageUrl;\n\n        // No name, use imageUrl instead\n        if (!name) {\n            name = imageUrl;\n        }\n\n        // lets also add the frame to pixi's global cache for fromFrame and fromImage fucntions\n        _BaseTexture2.default.addToCache(texture.baseTexture, name);\n        Texture.addToCache(texture, name);\n\n        // also add references by url if they are different.\n        if (name !== imageUrl) {\n            _BaseTexture2.default.addToCache(texture.baseTexture, imageUrl);\n            Texture.addToCache(texture, imageUrl);\n        }\n\n        return texture;\n    };\n\n    /**\n     * Adds a Texture to the global TextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the Texture will be stored against.\n     */\n\n\n    Texture.addToCache = function addToCache(texture, id) {\n        if (id) {\n            if (texture.textureCacheIds.indexOf(id) === -1) {\n                texture.textureCacheIds.push(id);\n            }\n\n            // @if DEBUG\n            /* eslint-disable no-console */\n            if (_utils.TextureCache[id]) {\n                console.warn('Texture added to the cache with an id [' + id + '] that already had an entry');\n            }\n            /* eslint-enable no-console */\n            // @endif\n\n            _utils.TextureCache[id] = texture;\n        }\n    };\n\n    /**\n     * Remove a Texture from the global TextureCache.\n     *\n     * @static\n     * @param {string|PIXI.Texture} texture - id of a Texture to be removed, or a Texture instance itself\n     * @return {PIXI.Texture|null} The Texture that was removed\n     */\n\n\n    Texture.removeFromCache = function removeFromCache(texture) {\n        if (typeof texture === 'string') {\n            var textureFromCache = _utils.TextureCache[texture];\n\n            if (textureFromCache) {\n                var index = textureFromCache.textureCacheIds.indexOf(texture);\n\n                if (index > -1) {\n                    textureFromCache.textureCacheIds.splice(index, 1);\n                }\n\n                delete _utils.TextureCache[texture];\n\n                return textureFromCache;\n            }\n        } else if (texture && texture.textureCacheIds) {\n            for (var i = 0; i < texture.textureCacheIds.length; ++i) {\n                // Check that texture matches the one being passed in before deleting it from the cache.\n                if (_utils.TextureCache[texture.textureCacheIds[i]] === texture) {\n                    delete _utils.TextureCache[texture.textureCacheIds[i]];\n                }\n            }\n\n            texture.textureCacheIds.length = 0;\n\n            return texture;\n        }\n\n        return null;\n    };\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses.\n     * Please call `_updateUvs()` after you change coordinates of `frame` manually.\n     *\n     * @member {PIXI.Rectangle}\n     */\n\n\n    _createClass(Texture, [{\n        key: 'frame',\n        get: function get() {\n            return this._frame;\n        },\n        set: function set(frame) // eslint-disable-line require-jsdoc\n        {\n            this._frame = frame;\n\n            this.noFrame = false;\n\n            var x = frame.x,\n                y = frame.y,\n                width = frame.width,\n                height = frame.height;\n\n            var xNotFit = x + width > this.baseTexture.width;\n            var yNotFit = y + height > this.baseTexture.height;\n\n            if (xNotFit || yNotFit) {\n                var relationship = xNotFit && yNotFit ? 'and' : 'or';\n                var errorX = 'X: ' + x + ' + ' + width + ' = ' + (x + width) + ' > ' + this.baseTexture.width;\n                var errorY = 'Y: ' + y + ' + ' + height + ' = ' + (y + height) + ' > ' + this.baseTexture.height;\n\n                throw new Error('Texture Error: frame does not fit inside the base Texture dimensions: ' + (errorX + ' ' + relationship + ' ' + errorY));\n            }\n\n            // this.valid = width && height && this.baseTexture.source && this.baseTexture.hasLoaded;\n            this.valid = width && height && this.baseTexture.hasLoaded;\n\n            if (!this.trim && !this.rotate) {\n                this.orig = frame;\n            }\n\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * Indicates whether the texture is rotated inside the atlas\n         * set to 2 to compensate for texture packer rotation\n         * set to 6 to compensate for spine packer rotation\n         * can be used to rotate or mirror sprites\n         * See {@link PIXI.GroupD8} for explanation\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'rotate',\n        get: function get() {\n            return this._rotate;\n        },\n        set: function set(rotate) // eslint-disable-line require-jsdoc\n        {\n            this._rotate = rotate;\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * The width of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'width',\n        get: function get() {\n            return this.orig.width;\n        }\n\n        /**\n         * The height of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this.orig.height;\n        }\n    }]);\n\n    return Texture;\n}(_eventemitter2.default);\n\nexports.default = Texture;\n\n\nfunction createWhiteTexture() {\n    var canvas = document.createElement('canvas');\n\n    canvas.width = 10;\n    canvas.height = 10;\n\n    var context = canvas.getContext('2d');\n\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 10, 10);\n\n    return new Texture(new _BaseTexture2.default(canvas));\n}\n\nfunction removeAllHandlers(tex) {\n    tex.destroy = function _emptyDestroy() {/* empty */};\n    tex.on = function _emptyOn() {/* empty */};\n    tex.once = function _emptyOnce() {/* empty */};\n    tex.emit = function _emptyEmit() {/* empty */};\n}\n\n/**\n * An empty texture, used often to not have to create multiple empty textures.\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\nTexture.EMPTY = new Texture(new _BaseTexture2.default());\nremoveAllHandlers(Texture.EMPTY);\nremoveAllHandlers(Texture.EMPTY.baseTexture);\n\n/**\n * A white texture of 10x10 size, used for graphics and other things\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\nTexture.WHITE = createWhiteTexture();\nremoveAllHandlers(Texture.WHITE);\nremoveAllHandlers(Texture.WHITE.baseTexture);\n//# sourceMappingURL=Texture.js.map"},"lineCount":691}},"hash":"06370c222a0e1fe906462b5ecb544444","cacheData":{"env":{}}}