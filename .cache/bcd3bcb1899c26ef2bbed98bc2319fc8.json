{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"./extractUniformsFromSrc","loc":{"line":7,"column":38}},{"name":"../../../utils","loc":{"line":11,"column":21}},{"name":"../../../const","loc":{"line":13,"column":21}},{"name":"../../../settings","loc":{"line":15,"column":24}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extractUniformsFromSrc = require('./extractUniformsFromSrc');\n\nvar _extractUniformsFromSrc2 = _interopRequireDefault(_extractUniformsFromSrc);\n\nvar _utils = require('../../../utils');\n\nvar _const = require('../../../const');\n\nvar _settings = require('../../../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SOURCE_KEY_MAP = {};\n\n// let math = require('../../../math');\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\n\nvar Filter = function () {\n  /**\n   * @param {string} [vertexSrc] - The source of the vertex shader.\n   * @param {string} [fragmentSrc] - The source of the fragment shader.\n   * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n   */\n  function Filter(vertexSrc, fragmentSrc, uniforms) {\n    _classCallCheck(this, Filter);\n\n    /**\n     * The vertex shader.\n     *\n     * @member {string}\n     */\n    this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n\n    /**\n     * The fragment shader.\n     *\n     * @member {string}\n     */\n    this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n\n    this._blendMode = _const.BLEND_MODES.NORMAL;\n\n    this.uniformData = uniforms || (0, _extractUniformsFromSrc2.default)(this.vertexSrc, this.fragmentSrc, 'projectionMatrix|uSampler');\n\n    /**\n     * An object containing the current values of custom uniforms.\n     * @example <caption>Updating the value of a custom uniform</caption>\n     * filter.uniforms.time = performance.now();\n     *\n     * @member {object}\n     */\n    this.uniforms = {};\n\n    for (var i in this.uniformData) {\n      this.uniforms[i] = this.uniformData[i].value;\n      if (this.uniformData[i].type) {\n        this.uniformData[i].type = this.uniformData[i].type.toLowerCase();\n      }\n    }\n\n    // this is where we store shader references..\n    // TODO we could cache this!\n    this.glShaders = {};\n\n    // used for cacheing.. sure there is a better way!\n    if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc]) {\n      SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = (0, _utils.uid)();\n    }\n\n    this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n\n    /**\n     * The padding of the filter. Some filters require extra space to breath such as a blur.\n     * Increasing this will add extra width and height to the bounds of the object that the\n     * filter is applied to.\n     *\n     * @member {number}\n     */\n    this.padding = 4;\n\n    /**\n     * The resolution of the filter. Setting this to be lower will lower the quality but\n     * increase the performance of the filter.\n     *\n     * @member {number}\n     */\n    this.resolution = _settings2.default.FILTER_RESOLUTION;\n\n    /**\n     * If enabled is true the filter is applied, if false it will not.\n     *\n     * @member {boolean}\n     */\n    this.enabled = true;\n\n    /**\n     * If enabled, PixiJS will fit the filter area into boundaries for better performance.\n     * Switch it off if it does not work for specific shader.\n     *\n     * @member {boolean}\n     */\n    this.autoFit = true;\n  }\n\n  /**\n   * Applies the filter\n   *\n   * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n   * @param {PIXI.RenderTarget} input - The input render target.\n   * @param {PIXI.RenderTarget} output - The target to output to.\n   * @param {boolean} clear - Should the output be cleared before rendering to it\n   * @param {object} [currentState] - It's current state of filter.\n   *        There are some useful properties in the currentState :\n   *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n   */\n\n\n  Filter.prototype.apply = function apply(filterManager, input, output, clear, currentState) // eslint-disable-line no-unused-vars\n  {\n    // --- //\n    //  this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(tempMatrix, window.panda );\n\n    // do as you please!\n\n    filterManager.applyFilter(this, input, output, clear);\n\n    // or just do a regular render..\n  };\n\n  /**\n   * Sets the blendmode of the filter\n   *\n   * @member {number}\n   * @default PIXI.BLEND_MODES.NORMAL\n   */\n\n\n  _createClass(Filter, [{\n    key: 'blendMode',\n    get: function get() {\n      return this._blendMode;\n    },\n    set: function set(value) // eslint-disable-line require-jsdoc\n    {\n      this._blendMode = value;\n    }\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @constant\n     */\n\n  }], [{\n    key: 'defaultVertexSrc',\n    get: function get() {\n      return ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 projectionMatrix;', 'uniform mat3 filterMatrix;', 'varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;', '   vTextureCoord = aTextureCoord ;', '}'].join('\\n');\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     */\n\n  }, {\n    key: 'defaultFragmentSrc',\n    get: function get() {\n      return ['varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'uniform sampler2D uSampler;', 'uniform sampler2D filterSampler;', 'void main(void){', '   vec4 masky = texture2D(filterSampler, vFilterCoord);', '   vec4 sample = texture2D(uSampler, vTextureCoord);', '   vec4 color;', '   if(mod(vFilterCoord.x, 1.0) > 0.5)', '   {', '     color = vec4(1.0, 0.0, 0.0, 1.0);', '   }', '   else', '   {', '     color = vec4(0.0, 1.0, 0.0, 1.0);', '   }',\n      // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n      '   gl_FragColor = mix(sample, masky, 0.5);', '   gl_FragColor *= sample.a;', '}'].join('\\n');\n    }\n  }]);\n\n  return Filter;\n}();\n\nexports.default = Filter;\n//# sourceMappingURL=Filter.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}}],"sources":{"node_modules/pixi.js/lib/core/renderers/webgl/filters/Filter.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extractUniformsFromSrc = require('./extractUniformsFromSrc');\n\nvar _extractUniformsFromSrc2 = _interopRequireDefault(_extractUniformsFromSrc);\n\nvar _utils = require('../../../utils');\n\nvar _const = require('../../../const');\n\nvar _settings = require('../../../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SOURCE_KEY_MAP = {};\n\n// let math = require('../../../math');\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\n\nvar Filter = function () {\n  /**\n   * @param {string} [vertexSrc] - The source of the vertex shader.\n   * @param {string} [fragmentSrc] - The source of the fragment shader.\n   * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n   */\n  function Filter(vertexSrc, fragmentSrc, uniforms) {\n    _classCallCheck(this, Filter);\n\n    /**\n     * The vertex shader.\n     *\n     * @member {string}\n     */\n    this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n\n    /**\n     * The fragment shader.\n     *\n     * @member {string}\n     */\n    this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n\n    this._blendMode = _const.BLEND_MODES.NORMAL;\n\n    this.uniformData = uniforms || (0, _extractUniformsFromSrc2.default)(this.vertexSrc, this.fragmentSrc, 'projectionMatrix|uSampler');\n\n    /**\n     * An object containing the current values of custom uniforms.\n     * @example <caption>Updating the value of a custom uniform</caption>\n     * filter.uniforms.time = performance.now();\n     *\n     * @member {object}\n     */\n    this.uniforms = {};\n\n    for (var i in this.uniformData) {\n      this.uniforms[i] = this.uniformData[i].value;\n      if (this.uniformData[i].type) {\n        this.uniformData[i].type = this.uniformData[i].type.toLowerCase();\n      }\n    }\n\n    // this is where we store shader references..\n    // TODO we could cache this!\n    this.glShaders = {};\n\n    // used for cacheing.. sure there is a better way!\n    if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc]) {\n      SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = (0, _utils.uid)();\n    }\n\n    this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n\n    /**\n     * The padding of the filter. Some filters require extra space to breath such as a blur.\n     * Increasing this will add extra width and height to the bounds of the object that the\n     * filter is applied to.\n     *\n     * @member {number}\n     */\n    this.padding = 4;\n\n    /**\n     * The resolution of the filter. Setting this to be lower will lower the quality but\n     * increase the performance of the filter.\n     *\n     * @member {number}\n     */\n    this.resolution = _settings2.default.FILTER_RESOLUTION;\n\n    /**\n     * If enabled is true the filter is applied, if false it will not.\n     *\n     * @member {boolean}\n     */\n    this.enabled = true;\n\n    /**\n     * If enabled, PixiJS will fit the filter area into boundaries for better performance.\n     * Switch it off if it does not work for specific shader.\n     *\n     * @member {boolean}\n     */\n    this.autoFit = true;\n  }\n\n  /**\n   * Applies the filter\n   *\n   * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n   * @param {PIXI.RenderTarget} input - The input render target.\n   * @param {PIXI.RenderTarget} output - The target to output to.\n   * @param {boolean} clear - Should the output be cleared before rendering to it\n   * @param {object} [currentState] - It's current state of filter.\n   *        There are some useful properties in the currentState :\n   *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n   */\n\n\n  Filter.prototype.apply = function apply(filterManager, input, output, clear, currentState) // eslint-disable-line no-unused-vars\n  {\n    // --- //\n    //  this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(tempMatrix, window.panda );\n\n    // do as you please!\n\n    filterManager.applyFilter(this, input, output, clear);\n\n    // or just do a regular render..\n  };\n\n  /**\n   * Sets the blendmode of the filter\n   *\n   * @member {number}\n   * @default PIXI.BLEND_MODES.NORMAL\n   */\n\n\n  _createClass(Filter, [{\n    key: 'blendMode',\n    get: function get() {\n      return this._blendMode;\n    },\n    set: function set(value) // eslint-disable-line require-jsdoc\n    {\n      this._blendMode = value;\n    }\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @constant\n     */\n\n  }], [{\n    key: 'defaultVertexSrc',\n    get: function get() {\n      return ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 projectionMatrix;', 'uniform mat3 filterMatrix;', 'varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;', '   vTextureCoord = aTextureCoord ;', '}'].join('\\n');\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     */\n\n  }, {\n    key: 'defaultFragmentSrc',\n    get: function get() {\n      return ['varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'uniform sampler2D uSampler;', 'uniform sampler2D filterSampler;', 'void main(void){', '   vec4 masky = texture2D(filterSampler, vFilterCoord);', '   vec4 sample = texture2D(uSampler, vTextureCoord);', '   vec4 color;', '   if(mod(vFilterCoord.x, 1.0) > 0.5)', '   {', '     color = vec4(1.0, 0.0, 0.0, 1.0);', '   }', '   else', '   {', '     color = vec4(0.0, 1.0, 0.0, 1.0);', '   }',\n      // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n      '   gl_FragColor = mix(sample, masky, 0.5);', '   gl_FragColor *= sample.a;', '}'].join('\\n');\n    }\n  }]);\n\n  return Filter;\n}();\n\nexports.default = Filter;\n//# sourceMappingURL=Filter.js.map"},"lineCount":195}},"hash":"f36c7425f9ebef16faec57af6c667dc0","cacheData":{"env":{}}}