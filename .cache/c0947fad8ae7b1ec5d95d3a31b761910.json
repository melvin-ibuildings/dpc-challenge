{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"../../core","loc":{"line":5,"column":20}},{"name":"../BasePrepare","loc":{"line":9,"column":28}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BasePrepare2 = require('../BasePrepare');\n\nvar _BasePrepare3 = _interopRequireDefault(_BasePrepare2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The prepare manager provides functionality to upload content to the GPU.\n *\n * An instance of this class is automatically created by default, and can be found at renderer.plugins.prepare\n *\n * @class\n * @extends PIXI.prepare.BasePrepare\n * @memberof PIXI.prepare\n */\nvar WebGLPrepare = function (_BasePrepare) {\n    _inherits(WebGLPrepare, _BasePrepare);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function WebGLPrepare(renderer) {\n        _classCallCheck(this, WebGLPrepare);\n\n        var _this = _possibleConstructorReturn(this, _BasePrepare.call(this, renderer));\n\n        _this.uploadHookHelper = _this.renderer;\n\n        // Add textures and graphics to upload\n        _this.registerFindHook(findGraphics);\n        _this.registerUploadHook(uploadBaseTextures);\n        _this.registerUploadHook(uploadGraphics);\n        return _this;\n    }\n\n    return WebGLPrepare;\n}(_BasePrepare3.default);\n/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = WebGLPrepare;\nfunction uploadBaseTextures(renderer, item) {\n    if (item instanceof core.BaseTexture) {\n        // if the texture already has a GL texture, then the texture has been prepared or rendered\n        // before now. If the texture changed, then the changer should be calling texture.update() which\n        // reuploads the texture without need for preparing it again\n        if (!item._glTextures[renderer.CONTEXT_UID]) {\n            renderer.textureManager.updateTexture(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to upload PIXI.Graphics to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\nfunction uploadGraphics(renderer, item) {\n    if (item instanceof core.Graphics) {\n        // if the item is not dirty and already has webgl data, then it got prepared or rendered\n        // before now and we shouldn't waste time updating it again\n        if (item.dirty || item.clearDirty || !item._webGL[renderer.plugins.graphics.CONTEXT_UID]) {\n            renderer.plugins.graphics.updateGraphics(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find graphics.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Graphics object was found.\n */\nfunction findGraphics(item, queue) {\n    if (item instanceof core.Graphics) {\n        queue.push(item);\n\n        return true;\n    }\n\n    return false;\n}\n\ncore.WebGLRenderer.registerPlugin('prepare', WebGLPrepare);\n//# sourceMappingURL=WebGLPrepare.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}}],"sources":{"node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BasePrepare2 = require('../BasePrepare');\n\nvar _BasePrepare3 = _interopRequireDefault(_BasePrepare2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The prepare manager provides functionality to upload content to the GPU.\n *\n * An instance of this class is automatically created by default, and can be found at renderer.plugins.prepare\n *\n * @class\n * @extends PIXI.prepare.BasePrepare\n * @memberof PIXI.prepare\n */\nvar WebGLPrepare = function (_BasePrepare) {\n    _inherits(WebGLPrepare, _BasePrepare);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function WebGLPrepare(renderer) {\n        _classCallCheck(this, WebGLPrepare);\n\n        var _this = _possibleConstructorReturn(this, _BasePrepare.call(this, renderer));\n\n        _this.uploadHookHelper = _this.renderer;\n\n        // Add textures and graphics to upload\n        _this.registerFindHook(findGraphics);\n        _this.registerUploadHook(uploadBaseTextures);\n        _this.registerUploadHook(uploadGraphics);\n        return _this;\n    }\n\n    return WebGLPrepare;\n}(_BasePrepare3.default);\n/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = WebGLPrepare;\nfunction uploadBaseTextures(renderer, item) {\n    if (item instanceof core.BaseTexture) {\n        // if the texture already has a GL texture, then the texture has been prepared or rendered\n        // before now. If the texture changed, then the changer should be calling texture.update() which\n        // reuploads the texture without need for preparing it again\n        if (!item._glTextures[renderer.CONTEXT_UID]) {\n            renderer.textureManager.updateTexture(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to upload PIXI.Graphics to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\nfunction uploadGraphics(renderer, item) {\n    if (item instanceof core.Graphics) {\n        // if the item is not dirty and already has webgl data, then it got prepared or rendered\n        // before now and we shouldn't waste time updating it again\n        if (item.dirty || item.clearDirty || !item._webGL[renderer.plugins.graphics.CONTEXT_UID]) {\n            renderer.plugins.graphics.updateGraphics(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find graphics.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Graphics object was found.\n */\nfunction findGraphics(item, queue) {\n    if (item instanceof core.Graphics) {\n        queue.push(item);\n\n        return true;\n    }\n\n    return false;\n}\n\ncore.WebGLRenderer.registerPlugin('prepare', WebGLPrepare);\n//# sourceMappingURL=WebGLPrepare.js.map"},"lineCount":121}},"hash":"bb1966f07c5570d3172127cd9b64a25b","cacheData":{"env":{}}}