{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/resource-loader/package.json","includedInParent":true,"mtime":1528375666938},{"name":"../../Resource","loc":{"line":9,"column":24}},{"name":"../../b64","loc":{"line":13,"column":17}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.blobMiddlewareFactory = blobMiddlewareFactory;\n\nvar _Resource = require('../../Resource');\n\nvar _Resource2 = _interopRequireDefault(_Resource);\n\nvar _b = require('../../b64');\n\nvar _b2 = _interopRequireDefault(_b);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Url = window.URL || window.webkitURL;\n\n// a middleware for transforming XHR loaded Blobs into more useful objects\nfunction blobMiddlewareFactory() {\n    return function blobMiddleware(resource, next) {\n        if (!resource.data) {\n            next();\n\n            return;\n        }\n\n        // if this was an XHR load of a blob\n        if (resource.xhr && resource.xhrType === _Resource2.default.XHR_RESPONSE_TYPE.BLOB) {\n            // if there is no blob support we probably got a binary string back\n            if (!window.Blob || typeof resource.data === 'string') {\n                var type = resource.xhr.getResponseHeader('content-type');\n\n                // this is an image, convert the binary string into a data url\n                if (type && type.indexOf('image') === 0) {\n                    resource.data = new Image();\n                    resource.data.src = 'data:' + type + ';base64,' + _b2.default.encodeBinary(resource.xhr.responseText);\n\n                    resource.type = _Resource2.default.TYPE.IMAGE;\n\n                    // wait until the image loads and then callback\n                    resource.data.onload = function () {\n                        resource.data.onload = null;\n\n                        next();\n                    };\n\n                    // next will be called on load\n                    return;\n                }\n            }\n            // if content type says this is an image, then we should transform the blob into an Image object\n            else if (resource.data.type.indexOf('image') === 0) {\n                    var _ret = function () {\n                        var src = Url.createObjectURL(resource.data);\n\n                        resource.blob = resource.data;\n                        resource.data = new Image();\n                        resource.data.src = src;\n\n                        resource.type = _Resource2.default.TYPE.IMAGE;\n\n                        // cleanup the no longer used blob after the image loads\n                        // TODO: Is this correct? Will the image be invalid after revoking?\n                        resource.data.onload = function () {\n                            Url.revokeObjectURL(src);\n                            resource.data.onload = null;\n\n                            next();\n                        };\n\n                        // next will be called on load.\n                        return {\n                            v: void 0\n                        };\n                    }();\n\n                    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n                }\n        }\n\n        next();\n    };\n}\n//# sourceMappingURL=blob.js.map","map":{"mappings":[{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/resource-loader/lib/middlewares/parsing/blob.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}}],"sources":{"node_modules/resource-loader/lib/middlewares/parsing/blob.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.blobMiddlewareFactory = blobMiddlewareFactory;\n\nvar _Resource = require('../../Resource');\n\nvar _Resource2 = _interopRequireDefault(_Resource);\n\nvar _b = require('../../b64');\n\nvar _b2 = _interopRequireDefault(_b);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Url = window.URL || window.webkitURL;\n\n// a middleware for transforming XHR loaded Blobs into more useful objects\nfunction blobMiddlewareFactory() {\n    return function blobMiddleware(resource, next) {\n        if (!resource.data) {\n            next();\n\n            return;\n        }\n\n        // if this was an XHR load of a blob\n        if (resource.xhr && resource.xhrType === _Resource2.default.XHR_RESPONSE_TYPE.BLOB) {\n            // if there is no blob support we probably got a binary string back\n            if (!window.Blob || typeof resource.data === 'string') {\n                var type = resource.xhr.getResponseHeader('content-type');\n\n                // this is an image, convert the binary string into a data url\n                if (type && type.indexOf('image') === 0) {\n                    resource.data = new Image();\n                    resource.data.src = 'data:' + type + ';base64,' + _b2.default.encodeBinary(resource.xhr.responseText);\n\n                    resource.type = _Resource2.default.TYPE.IMAGE;\n\n                    // wait until the image loads and then callback\n                    resource.data.onload = function () {\n                        resource.data.onload = null;\n\n                        next();\n                    };\n\n                    // next will be called on load\n                    return;\n                }\n            }\n            // if content type says this is an image, then we should transform the blob into an Image object\n            else if (resource.data.type.indexOf('image') === 0) {\n                    var _ret = function () {\n                        var src = Url.createObjectURL(resource.data);\n\n                        resource.blob = resource.data;\n                        resource.data = new Image();\n                        resource.data.src = src;\n\n                        resource.type = _Resource2.default.TYPE.IMAGE;\n\n                        // cleanup the no longer used blob after the image loads\n                        // TODO: Is this correct? Will the image be invalid after revoking?\n                        resource.data.onload = function () {\n                            Url.revokeObjectURL(src);\n                            resource.data.onload = null;\n\n                            next();\n                        };\n\n                        // next will be called on load.\n                        return {\n                            v: void 0\n                        };\n                    }();\n\n                    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n                }\n        }\n\n        next();\n    };\n}\n//# sourceMappingURL=blob.js.map"},"lineCount":87}},"hash":"4e58f92f6107707cc577de62f810acf3","cacheData":{"env":{}}}