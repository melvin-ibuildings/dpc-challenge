{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"../../core","loc":{"line":5,"column":20}},{"name":"./ParticleShader","loc":{"line":9,"column":30}},{"name":"./ParticleBuffer","loc":{"line":13,"column":30}},{"name":"../../core/utils","loc":{"line":17,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ParticleShader = require('./ParticleShader');\n\nvar _ParticleShader2 = _interopRequireDefault(_ParticleShader);\n\nvar _ParticleBuffer = require('./ParticleBuffer');\n\nvar _ParticleBuffer2 = _interopRequireDefault(_ParticleBuffer);\n\nvar _utils = require('../../core/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original PixiJS version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleRenderer.java\n */\n\n/**\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar ParticleRenderer = function (_core$ObjectRenderer) {\n    _inherits(ParticleRenderer, _core$ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    function ParticleRenderer(renderer) {\n        _classCallCheck(this, ParticleRenderer);\n\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        // and max number of element in the index buffer is 16384 * 6 = 98304\n        // Creating a full index buffer, overhead is 98304 * 2 = 196Ko\n        // let numIndices = 98304;\n\n        /**\n         * The default shader that is used if a sprite doesn't have a more specific one.\n         *\n         * @member {PIXI.Shader}\n         */\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n\n        _this.indexBuffer = null;\n\n        _this.properties = null;\n\n        _this.tempMatrix = new core.Matrix();\n\n        _this.CONTEXT_UID = 0;\n        return _this;\n    }\n\n    /**\n     * When there is a WebGL context change\n     *\n     * @private\n     */\n\n\n    ParticleRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n\n        // setup default shader\n        this.shader = new _ParticleShader2.default(gl);\n\n        this.properties = [\n        // verticesData\n        {\n            attribute: this.shader.attributes.aVertexPosition,\n            size: 2,\n            uploadFunction: this.uploadVertices,\n            offset: 0\n        },\n        // positionData\n        {\n            attribute: this.shader.attributes.aPositionCoord,\n            size: 2,\n            uploadFunction: this.uploadPosition,\n            offset: 0\n        },\n        // rotationData\n        {\n            attribute: this.shader.attributes.aRotation,\n            size: 1,\n            uploadFunction: this.uploadRotation,\n            offset: 0\n        },\n        // uvsData\n        {\n            attribute: this.shader.attributes.aTextureCoord,\n            size: 2,\n            uploadFunction: this.uploadUvs,\n            offset: 0\n        },\n        // tintData\n        {\n            attribute: this.shader.attributes.aColor,\n            size: 1,\n            unsignedByte: true,\n            uploadFunction: this.uploadTint,\n            offset: 0\n        }];\n    };\n\n    /**\n     * Starts a new particle batch.\n     *\n     */\n\n\n    ParticleRenderer.prototype.start = function start() {\n        this.renderer.bindShader(this.shader);\n    };\n\n    /**\n     * Renders the particle container object.\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     */\n\n\n    ParticleRenderer.prototype.render = function render(container) {\n        var children = container.children;\n        var maxSize = container._maxSize;\n        var batchSize = container._batchSize;\n        var renderer = this.renderer;\n        var totalChildren = children.length;\n\n        if (totalChildren === 0) {\n            return;\n        } else if (totalChildren > maxSize) {\n            totalChildren = maxSize;\n        }\n\n        var buffers = container._glBuffers[renderer.CONTEXT_UID];\n\n        if (!buffers) {\n            buffers = container._glBuffers[renderer.CONTEXT_UID] = this.generateBuffers(container);\n        }\n\n        var baseTexture = children[0]._texture.baseTexture;\n\n        // if the uvs have not updated then no point rendering just yet!\n        this.renderer.setBlendMode(core.utils.correctBlendMode(container.blendMode, baseTexture.premultipliedAlpha));\n\n        var gl = renderer.gl;\n\n        var m = container.worldTransform.copy(this.tempMatrix);\n\n        m.prepend(renderer._activeRenderTarget.projectionMatrix);\n\n        this.shader.uniforms.projectionMatrix = m.toArray(true);\n\n        this.shader.uniforms.uColor = core.utils.premultiplyRgba(container.tintRgb, container.worldAlpha, this.shader.uniforms.uColor, baseTexture.premultipliedAlpha);\n\n        // make sure the texture is bound..\n        this.shader.uniforms.uSampler = renderer.bindTexture(baseTexture);\n\n        var updateStatic = false;\n\n        // now lets upload and render the buffers..\n        for (var i = 0, j = 0; i < totalChildren; i += batchSize, j += 1) {\n            var amount = totalChildren - i;\n\n            if (amount > batchSize) {\n                amount = batchSize;\n            }\n\n            if (j >= buffers.length) {\n                if (!container.autoResize) {\n                    break;\n                }\n                buffers.push(this._generateOneMoreBuffer(container));\n            }\n\n            var buffer = buffers[j];\n\n            // we always upload the dynamic\n            buffer.uploadDynamic(children, i, amount);\n\n            var bid = container._bufferUpdateIDs[j] || 0;\n\n            updateStatic = updateStatic || buffer._updateID < bid;\n            // we only upload the static content when we have to!\n            if (updateStatic) {\n                buffer._updateID = container._updateID;\n                buffer.uploadStatic(children, i, amount);\n            }\n\n            // bind the buffer\n            renderer.bindVao(buffer.vao);\n            buffer.vao.draw(gl.TRIANGLES, amount * 6);\n        }\n    };\n\n    /**\n     * Creates one particle buffer for each child in the container we want to render and updates internal properties\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer[]} The buffers\n     */\n\n\n    ParticleRenderer.prototype.generateBuffers = function generateBuffers(container) {\n        var gl = this.renderer.gl;\n        var buffers = [];\n        var size = container._maxSize;\n        var batchSize = container._batchSize;\n        var dynamicPropertyFlags = container._properties;\n\n        for (var i = 0; i < size; i += batchSize) {\n            buffers.push(new _ParticleBuffer2.default(gl, this.properties, dynamicPropertyFlags, batchSize));\n        }\n\n        return buffers;\n    };\n\n    /**\n     * Creates one more particle buffer, because container has autoResize feature\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer} generated buffer\n     * @private\n     */\n\n\n    ParticleRenderer.prototype._generateOneMoreBuffer = function _generateOneMoreBuffer(container) {\n        var gl = this.renderer.gl;\n        var batchSize = container._batchSize;\n        var dynamicPropertyFlags = container._properties;\n\n        return new _ParticleBuffer2.default(gl, this.properties, dynamicPropertyFlags, batchSize);\n    };\n\n    /**\n     * Uploads the verticies.\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their vertices uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadVertices = function uploadVertices(children, startIndex, amount, array, stride, offset) {\n        var w0 = 0;\n        var w1 = 0;\n        var h0 = 0;\n        var h1 = 0;\n\n        for (var i = 0; i < amount; ++i) {\n            var sprite = children[startIndex + i];\n            var texture = sprite._texture;\n            var sx = sprite.scale.x;\n            var sy = sprite.scale.y;\n            var trim = texture.trim;\n            var orig = texture.orig;\n\n            if (trim) {\n                // if the sprite is trimmed and is not a tilingsprite then we need to add the\n                // extra space before transforming the sprite coords..\n                w1 = trim.x - sprite.anchor.x * orig.width;\n                w0 = w1 + trim.width;\n\n                h1 = trim.y - sprite.anchor.y * orig.height;\n                h0 = h1 + trim.height;\n            } else {\n                w0 = orig.width * (1 - sprite.anchor.x);\n                w1 = orig.width * -sprite.anchor.x;\n\n                h0 = orig.height * (1 - sprite.anchor.y);\n                h1 = orig.height * -sprite.anchor.y;\n            }\n\n            array[offset] = w1 * sx;\n            array[offset + 1] = h1 * sy;\n\n            array[offset + stride] = w0 * sx;\n            array[offset + stride + 1] = h1 * sy;\n\n            array[offset + stride * 2] = w0 * sx;\n            array[offset + stride * 2 + 1] = h0 * sy;\n\n            array[offset + stride * 3] = w1 * sx;\n            array[offset + stride * 3 + 1] = h0 * sy;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their positions uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadPosition = function uploadPosition(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spritePosition = children[startIndex + i].position;\n\n            array[offset] = spritePosition.x;\n            array[offset + 1] = spritePosition.y;\n\n            array[offset + stride] = spritePosition.x;\n            array[offset + stride + 1] = spritePosition.y;\n\n            array[offset + stride * 2] = spritePosition.x;\n            array[offset + stride * 2 + 1] = spritePosition.y;\n\n            array[offset + stride * 3] = spritePosition.x;\n            array[offset + stride * 3 + 1] = spritePosition.y;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadRotation = function uploadRotation(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spriteRotation = children[startIndex + i].rotation;\n\n            array[offset] = spriteRotation;\n            array[offset + stride] = spriteRotation;\n            array[offset + stride * 2] = spriteRotation;\n            array[offset + stride * 3] = spriteRotation;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadUvs = function uploadUvs(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; ++i) {\n            var textureUvs = children[startIndex + i]._texture._uvs;\n\n            if (textureUvs) {\n                array[offset] = textureUvs.x0;\n                array[offset + 1] = textureUvs.y0;\n\n                array[offset + stride] = textureUvs.x1;\n                array[offset + stride + 1] = textureUvs.y1;\n\n                array[offset + stride * 2] = textureUvs.x2;\n                array[offset + stride * 2 + 1] = textureUvs.y2;\n\n                array[offset + stride * 3] = textureUvs.x3;\n                array[offset + stride * 3 + 1] = textureUvs.y3;\n\n                offset += stride * 4;\n            } else {\n                // TODO you know this can be easier!\n                array[offset] = 0;\n                array[offset + 1] = 0;\n\n                array[offset + stride] = 0;\n                array[offset + stride + 1] = 0;\n\n                array[offset + stride * 2] = 0;\n                array[offset + stride * 2 + 1] = 0;\n\n                array[offset + stride * 3] = 0;\n                array[offset + stride * 3 + 1] = 0;\n\n                offset += stride * 4;\n            }\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadTint = function uploadTint(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; ++i) {\n            var sprite = children[startIndex + i];\n            var premultiplied = sprite._texture.baseTexture.premultipliedAlpha;\n            var alpha = sprite.alpha;\n            // we dont call extra function if alpha is 1.0, that's faster\n            var argb = alpha < 1.0 && premultiplied ? (0, _utils.premultiplyTint)(sprite._tintRGB, alpha) : sprite._tintRGB + (alpha * 255 << 24);\n\n            array[offset] = argb;\n            array[offset + stride] = argb;\n            array[offset + stride * 2] = argb;\n            array[offset + stride * 3] = argb;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     * Destroys the ParticleRenderer.\n     *\n     */\n\n\n    ParticleRenderer.prototype.destroy = function destroy() {\n        if (this.renderer.gl) {\n            this.renderer.gl.deleteBuffer(this.indexBuffer);\n        }\n\n        _core$ObjectRenderer.prototype.destroy.call(this);\n\n        this.shader.destroy();\n\n        this.indices = null;\n        this.tempMatrix = null;\n    };\n\n    return ParticleRenderer;\n}(core.ObjectRenderer);\n\nexports.default = ParticleRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('particle', ParticleRenderer);\n//# sourceMappingURL=ParticleRenderer.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}}],"sources":{"node_modules/pixi.js/lib/particles/webgl/ParticleRenderer.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ParticleShader = require('./ParticleShader');\n\nvar _ParticleShader2 = _interopRequireDefault(_ParticleShader);\n\nvar _ParticleBuffer = require('./ParticleBuffer');\n\nvar _ParticleBuffer2 = _interopRequireDefault(_ParticleBuffer);\n\nvar _utils = require('../../core/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original PixiJS version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleRenderer.java\n */\n\n/**\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar ParticleRenderer = function (_core$ObjectRenderer) {\n    _inherits(ParticleRenderer, _core$ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    function ParticleRenderer(renderer) {\n        _classCallCheck(this, ParticleRenderer);\n\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        // and max number of element in the index buffer is 16384 * 6 = 98304\n        // Creating a full index buffer, overhead is 98304 * 2 = 196Ko\n        // let numIndices = 98304;\n\n        /**\n         * The default shader that is used if a sprite doesn't have a more specific one.\n         *\n         * @member {PIXI.Shader}\n         */\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n\n        _this.indexBuffer = null;\n\n        _this.properties = null;\n\n        _this.tempMatrix = new core.Matrix();\n\n        _this.CONTEXT_UID = 0;\n        return _this;\n    }\n\n    /**\n     * When there is a WebGL context change\n     *\n     * @private\n     */\n\n\n    ParticleRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n\n        // setup default shader\n        this.shader = new _ParticleShader2.default(gl);\n\n        this.properties = [\n        // verticesData\n        {\n            attribute: this.shader.attributes.aVertexPosition,\n            size: 2,\n            uploadFunction: this.uploadVertices,\n            offset: 0\n        },\n        // positionData\n        {\n            attribute: this.shader.attributes.aPositionCoord,\n            size: 2,\n            uploadFunction: this.uploadPosition,\n            offset: 0\n        },\n        // rotationData\n        {\n            attribute: this.shader.attributes.aRotation,\n            size: 1,\n            uploadFunction: this.uploadRotation,\n            offset: 0\n        },\n        // uvsData\n        {\n            attribute: this.shader.attributes.aTextureCoord,\n            size: 2,\n            uploadFunction: this.uploadUvs,\n            offset: 0\n        },\n        // tintData\n        {\n            attribute: this.shader.attributes.aColor,\n            size: 1,\n            unsignedByte: true,\n            uploadFunction: this.uploadTint,\n            offset: 0\n        }];\n    };\n\n    /**\n     * Starts a new particle batch.\n     *\n     */\n\n\n    ParticleRenderer.prototype.start = function start() {\n        this.renderer.bindShader(this.shader);\n    };\n\n    /**\n     * Renders the particle container object.\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     */\n\n\n    ParticleRenderer.prototype.render = function render(container) {\n        var children = container.children;\n        var maxSize = container._maxSize;\n        var batchSize = container._batchSize;\n        var renderer = this.renderer;\n        var totalChildren = children.length;\n\n        if (totalChildren === 0) {\n            return;\n        } else if (totalChildren > maxSize) {\n            totalChildren = maxSize;\n        }\n\n        var buffers = container._glBuffers[renderer.CONTEXT_UID];\n\n        if (!buffers) {\n            buffers = container._glBuffers[renderer.CONTEXT_UID] = this.generateBuffers(container);\n        }\n\n        var baseTexture = children[0]._texture.baseTexture;\n\n        // if the uvs have not updated then no point rendering just yet!\n        this.renderer.setBlendMode(core.utils.correctBlendMode(container.blendMode, baseTexture.premultipliedAlpha));\n\n        var gl = renderer.gl;\n\n        var m = container.worldTransform.copy(this.tempMatrix);\n\n        m.prepend(renderer._activeRenderTarget.projectionMatrix);\n\n        this.shader.uniforms.projectionMatrix = m.toArray(true);\n\n        this.shader.uniforms.uColor = core.utils.premultiplyRgba(container.tintRgb, container.worldAlpha, this.shader.uniforms.uColor, baseTexture.premultipliedAlpha);\n\n        // make sure the texture is bound..\n        this.shader.uniforms.uSampler = renderer.bindTexture(baseTexture);\n\n        var updateStatic = false;\n\n        // now lets upload and render the buffers..\n        for (var i = 0, j = 0; i < totalChildren; i += batchSize, j += 1) {\n            var amount = totalChildren - i;\n\n            if (amount > batchSize) {\n                amount = batchSize;\n            }\n\n            if (j >= buffers.length) {\n                if (!container.autoResize) {\n                    break;\n                }\n                buffers.push(this._generateOneMoreBuffer(container));\n            }\n\n            var buffer = buffers[j];\n\n            // we always upload the dynamic\n            buffer.uploadDynamic(children, i, amount);\n\n            var bid = container._bufferUpdateIDs[j] || 0;\n\n            updateStatic = updateStatic || buffer._updateID < bid;\n            // we only upload the static content when we have to!\n            if (updateStatic) {\n                buffer._updateID = container._updateID;\n                buffer.uploadStatic(children, i, amount);\n            }\n\n            // bind the buffer\n            renderer.bindVao(buffer.vao);\n            buffer.vao.draw(gl.TRIANGLES, amount * 6);\n        }\n    };\n\n    /**\n     * Creates one particle buffer for each child in the container we want to render and updates internal properties\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer[]} The buffers\n     */\n\n\n    ParticleRenderer.prototype.generateBuffers = function generateBuffers(container) {\n        var gl = this.renderer.gl;\n        var buffers = [];\n        var size = container._maxSize;\n        var batchSize = container._batchSize;\n        var dynamicPropertyFlags = container._properties;\n\n        for (var i = 0; i < size; i += batchSize) {\n            buffers.push(new _ParticleBuffer2.default(gl, this.properties, dynamicPropertyFlags, batchSize));\n        }\n\n        return buffers;\n    };\n\n    /**\n     * Creates one more particle buffer, because container has autoResize feature\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer} generated buffer\n     * @private\n     */\n\n\n    ParticleRenderer.prototype._generateOneMoreBuffer = function _generateOneMoreBuffer(container) {\n        var gl = this.renderer.gl;\n        var batchSize = container._batchSize;\n        var dynamicPropertyFlags = container._properties;\n\n        return new _ParticleBuffer2.default(gl, this.properties, dynamicPropertyFlags, batchSize);\n    };\n\n    /**\n     * Uploads the verticies.\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their vertices uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadVertices = function uploadVertices(children, startIndex, amount, array, stride, offset) {\n        var w0 = 0;\n        var w1 = 0;\n        var h0 = 0;\n        var h1 = 0;\n\n        for (var i = 0; i < amount; ++i) {\n            var sprite = children[startIndex + i];\n            var texture = sprite._texture;\n            var sx = sprite.scale.x;\n            var sy = sprite.scale.y;\n            var trim = texture.trim;\n            var orig = texture.orig;\n\n            if (trim) {\n                // if the sprite is trimmed and is not a tilingsprite then we need to add the\n                // extra space before transforming the sprite coords..\n                w1 = trim.x - sprite.anchor.x * orig.width;\n                w0 = w1 + trim.width;\n\n                h1 = trim.y - sprite.anchor.y * orig.height;\n                h0 = h1 + trim.height;\n            } else {\n                w0 = orig.width * (1 - sprite.anchor.x);\n                w1 = orig.width * -sprite.anchor.x;\n\n                h0 = orig.height * (1 - sprite.anchor.y);\n                h1 = orig.height * -sprite.anchor.y;\n            }\n\n            array[offset] = w1 * sx;\n            array[offset + 1] = h1 * sy;\n\n            array[offset + stride] = w0 * sx;\n            array[offset + stride + 1] = h1 * sy;\n\n            array[offset + stride * 2] = w0 * sx;\n            array[offset + stride * 2 + 1] = h0 * sy;\n\n            array[offset + stride * 3] = w1 * sx;\n            array[offset + stride * 3 + 1] = h0 * sy;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their positions uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadPosition = function uploadPosition(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spritePosition = children[startIndex + i].position;\n\n            array[offset] = spritePosition.x;\n            array[offset + 1] = spritePosition.y;\n\n            array[offset + stride] = spritePosition.x;\n            array[offset + stride + 1] = spritePosition.y;\n\n            array[offset + stride * 2] = spritePosition.x;\n            array[offset + stride * 2 + 1] = spritePosition.y;\n\n            array[offset + stride * 3] = spritePosition.x;\n            array[offset + stride * 3 + 1] = spritePosition.y;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadRotation = function uploadRotation(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spriteRotation = children[startIndex + i].rotation;\n\n            array[offset] = spriteRotation;\n            array[offset + stride] = spriteRotation;\n            array[offset + stride * 2] = spriteRotation;\n            array[offset + stride * 3] = spriteRotation;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadUvs = function uploadUvs(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; ++i) {\n            var textureUvs = children[startIndex + i]._texture._uvs;\n\n            if (textureUvs) {\n                array[offset] = textureUvs.x0;\n                array[offset + 1] = textureUvs.y0;\n\n                array[offset + stride] = textureUvs.x1;\n                array[offset + stride + 1] = textureUvs.y1;\n\n                array[offset + stride * 2] = textureUvs.x2;\n                array[offset + stride * 2 + 1] = textureUvs.y2;\n\n                array[offset + stride * 3] = textureUvs.x3;\n                array[offset + stride * 3 + 1] = textureUvs.y3;\n\n                offset += stride * 4;\n            } else {\n                // TODO you know this can be easier!\n                array[offset] = 0;\n                array[offset + 1] = 0;\n\n                array[offset + stride] = 0;\n                array[offset + stride + 1] = 0;\n\n                array[offset + stride * 2] = 0;\n                array[offset + stride * 2 + 1] = 0;\n\n                array[offset + stride * 3] = 0;\n                array[offset + stride * 3 + 1] = 0;\n\n                offset += stride * 4;\n            }\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadTint = function uploadTint(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; ++i) {\n            var sprite = children[startIndex + i];\n            var premultiplied = sprite._texture.baseTexture.premultipliedAlpha;\n            var alpha = sprite.alpha;\n            // we dont call extra function if alpha is 1.0, that's faster\n            var argb = alpha < 1.0 && premultiplied ? (0, _utils.premultiplyTint)(sprite._tintRGB, alpha) : sprite._tintRGB + (alpha * 255 << 24);\n\n            array[offset] = argb;\n            array[offset + stride] = argb;\n            array[offset + stride * 2] = argb;\n            array[offset + stride * 3] = argb;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     * Destroys the ParticleRenderer.\n     *\n     */\n\n\n    ParticleRenderer.prototype.destroy = function destroy() {\n        if (this.renderer.gl) {\n            this.renderer.gl.deleteBuffer(this.indexBuffer);\n        }\n\n        _core$ObjectRenderer.prototype.destroy.call(this);\n\n        this.shader.destroy();\n\n        this.indices = null;\n        this.tempMatrix = null;\n    };\n\n    return ParticleRenderer;\n}(core.ObjectRenderer);\n\nexports.default = ParticleRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('particle', ParticleRenderer);\n//# sourceMappingURL=ParticleRenderer.js.map"},"lineCount":480}},"hash":"f0a0ccfe4916ad594f839fd9ecf5d479","cacheData":{"env":{}}}