{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"../core","loc":{"line":7,"column":20}},{"name":"../core/utils","loc":{"line":11,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _utils = require('../core/utils');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The ParticleContainer class is a really fast version of the Container built solely for speed,\n * so use when you need a lot of sprites or particles. The tradeoff of the ParticleContainer is that most advanced\n * functionality will not work. ParticleContainer implements the basic object transform (position, scale, rotation)\n * and some advanced functionality like tint (as of v4.5.6).\n * Other more advanced functionality like masking, children, filters, etc will not work on sprites in this batch.\n *\n * It's extremely easy to use :\n *\n * ```js\n * let container = new ParticleContainer();\n *\n * for (let i = 0; i < 100; ++i)\n * {\n *     let sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\n *     container.addChild(sprite);\n * }\n * ```\n *\n * And here you have a hundred sprites that will be rendered at the speed of light.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.particles\n */\nvar ParticleContainer = function (_core$Container) {\n    _inherits(ParticleContainer, _core$Container);\n\n    /**\n     * @param {number} [maxSize=1500] - The maximum number of particles that can be rendered by the container.\n     *  Affects size of allocated buffers.\n     * @param {object} [properties] - The properties of children that should be uploaded to the gpu and applied.\n     * @param {boolean} [properties.vertices=false] - When true, vertices be uploaded and applied.\n     *                  if sprite's ` scale/anchor/trim/frame/orig` is dynamic, please set `true`.\n     * @param {boolean} [properties.position=true] - When true, position be uploaded and applied.\n     * @param {boolean} [properties.rotation=false] - When true, rotation be uploaded and applied.\n     * @param {boolean} [properties.uvs=false] - When true, uvs be uploaded and applied.\n     * @param {boolean} [properties.tint=false] - When true, alpha and tint be uploaded and applied.\n     * @param {number} [batchSize=16384] - Number of particles per batch. If less than maxSize, it uses maxSize instead.\n     * @param {boolean} [autoResize=false] If true, container allocates more batches in case\n     *  there are more than `maxSize` particles.\n     */\n    function ParticleContainer() {\n        var maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1500;\n        var properties = arguments[1];\n        var batchSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16384;\n        var autoResize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ParticleContainer);\n\n        // Making sure the batch size is valid\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n        var maxBatchSize = 16384;\n\n        if (batchSize > maxBatchSize) {\n            batchSize = maxBatchSize;\n        }\n\n        if (batchSize > maxSize) {\n            batchSize = maxSize;\n        }\n\n        /**\n         * Set properties to be dynamic (true) / static (false)\n         *\n         * @member {boolean[]}\n         * @private\n         */\n        _this._properties = [false, true, false, false, false];\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._maxSize = maxSize;\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._batchSize = batchSize;\n\n        /**\n         * @member {object<number, WebGLBuffer>}\n         * @private\n         */\n        _this._glBuffers = {};\n\n        /**\n         * for every batch stores _updateID corresponding to the last change in that batch\n         * @member {number[]}\n         * @private\n         */\n        _this._bufferUpdateIDs = [];\n\n        /**\n         * when child inserted, removed or changes position this number goes up\n         * @member {number[]}\n         * @private\n         */\n        _this._updateID = 0;\n\n        /**\n         * @member {boolean}\n         *\n         */\n        _this.interactiveChildren = false;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL`\n         * to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = core.BLEND_MODES.NORMAL;\n\n        /**\n         * If true, container allocates more batches in case there are more than `maxSize` particles.\n         * @member {boolean}\n         * @default false\n         */\n        _this.autoResize = autoResize;\n\n        /**\n         * Used for canvas renderering. If true then the elements will be positioned at the\n         * nearest pixel. This provides a nice speed boost.\n         *\n         * @member {boolean}\n         * @default true;\n         */\n        _this.roundPixels = true;\n\n        /**\n         * The texture used to render the children.\n         *\n         * @readonly\n         * @member {BaseTexture}\n         */\n        _this.baseTexture = null;\n\n        _this.setProperties(properties);\n\n        /**\n         * The tint applied to the container.\n         * This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this._tint = 0;\n        _this.tintRgb = new Float32Array(4);\n        _this.tint = 0xFFFFFF;\n        return _this;\n    }\n\n    /**\n     * Sets the private properties array to dynamic / static based on the passed properties object\n     *\n     * @param {object} properties - The properties to be uploaded\n     */\n\n\n    ParticleContainer.prototype.setProperties = function setProperties(properties) {\n        if (properties) {\n            this._properties[0] = 'vertices' in properties || 'scale' in properties ? !!properties.vertices || !!properties.scale : this._properties[0];\n            this._properties[1] = 'position' in properties ? !!properties.position : this._properties[1];\n            this._properties[2] = 'rotation' in properties ? !!properties.rotation : this._properties[2];\n            this._properties[3] = 'uvs' in properties ? !!properties.uvs : this._properties[3];\n            this._properties[4] = 'tint' in properties || 'alpha' in properties ? !!properties.tint || !!properties.alpha : this._properties[4];\n        }\n    };\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */\n\n\n    ParticleContainer.prototype.updateTransform = function updateTransform() {\n        // TODO don't need to!\n        this.displayObjectUpdateTransform();\n        //  PIXI.Container.prototype.updateTransform.call( this );\n    };\n\n    /**\n     * The tint applied to the container. This is a hex value.\n     * A value of 0xFFFFFF will remove any tint effect.\n     ** IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n\n\n    /**\n     * Renders the container using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The webgl renderer\n     */\n    ParticleContainer.prototype.renderWebGL = function renderWebGL(renderer) {\n        var _this2 = this;\n\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        if (!this.baseTexture) {\n            this.baseTexture = this.children[0]._texture.baseTexture;\n            if (!this.baseTexture.hasLoaded) {\n                this.baseTexture.once('update', function () {\n                    return _this2.onChildrenChange(0);\n                });\n            }\n        }\n\n        renderer.setObjectRenderer(renderer.plugins.particle);\n        renderer.plugins.particle.render(this);\n    };\n\n    /**\n     * Set the flag that static data should be updated to true\n     *\n     * @private\n     * @param {number} smallestChildIndex - The smallest child index\n     */\n\n\n    ParticleContainer.prototype.onChildrenChange = function onChildrenChange(smallestChildIndex) {\n        var bufferIndex = Math.floor(smallestChildIndex / this._batchSize);\n\n        while (this._bufferUpdateIDs.length < bufferIndex) {\n            this._bufferUpdateIDs.push(0);\n        }\n        this._bufferUpdateIDs[bufferIndex] = ++this._updateID;\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer\n     */\n\n\n    ParticleContainer.prototype.renderCanvas = function renderCanvas(renderer) {\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        var context = renderer.context;\n        var transform = this.worldTransform;\n        var isRotated = true;\n\n        var positionX = 0;\n        var positionY = 0;\n\n        var finalWidth = 0;\n        var finalHeight = 0;\n\n        renderer.setBlendMode(this.blendMode);\n\n        context.globalAlpha = this.worldAlpha;\n\n        this.displayObjectUpdateTransform();\n\n        for (var i = 0; i < this.children.length; ++i) {\n            var child = this.children[i];\n\n            if (!child.visible) {\n                continue;\n            }\n\n            var frame = child._texture.frame;\n\n            context.globalAlpha = this.worldAlpha * child.alpha;\n\n            if (child.rotation % (Math.PI * 2) === 0) {\n                // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n                if (isRotated) {\n                    context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx * renderer.resolution, transform.ty * renderer.resolution);\n\n                    isRotated = false;\n                }\n\n                positionX = child.anchor.x * (-frame.width * child.scale.x) + child.position.x + 0.5;\n                positionY = child.anchor.y * (-frame.height * child.scale.y) + child.position.y + 0.5;\n\n                finalWidth = frame.width * child.scale.x;\n                finalHeight = frame.height * child.scale.y;\n            } else {\n                if (!isRotated) {\n                    isRotated = true;\n                }\n\n                child.displayObjectUpdateTransform();\n\n                var childTransform = child.worldTransform;\n\n                if (renderer.roundPixels) {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution | 0, childTransform.ty * renderer.resolution | 0);\n                } else {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution, childTransform.ty * renderer.resolution);\n                }\n\n                positionX = child.anchor.x * -frame.width + 0.5;\n                positionY = child.anchor.y * -frame.height + 0.5;\n\n                finalWidth = frame.width;\n                finalHeight = frame.height;\n            }\n\n            var resolution = child._texture.baseTexture.resolution;\n\n            context.drawImage(child._texture.baseTexture.source, frame.x * resolution, frame.y * resolution, frame.width * resolution, frame.height * resolution, positionX * renderer.resolution, positionY * renderer.resolution, finalWidth * renderer.resolution, finalHeight * renderer.resolution);\n        }\n    };\n\n    /**\n     * Destroys the container\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n\n\n    ParticleContainer.prototype.destroy = function destroy(options) {\n        _core$Container.prototype.destroy.call(this, options);\n\n        if (this._buffers) {\n            for (var i = 0; i < this._buffers.length; ++i) {\n                this._buffers[i].destroy();\n            }\n        }\n\n        this._properties = null;\n        this._buffers = null;\n        this._bufferUpdateIDs = null;\n    };\n\n    _createClass(ParticleContainer, [{\n        key: 'tint',\n        get: function get() {\n            return this._tint;\n        },\n        set: function set(value) // eslint-disable-line require-jsdoc\n        {\n            this._tint = value;\n            (0, _utils.hex2rgb)(value, this.tintRgb);\n        }\n    }]);\n\n    return ParticleContainer;\n}(core.Container);\n\nexports.default = ParticleContainer;\n//# sourceMappingURL=ParticleContainer.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/pixi.js/lib/particles/ParticleContainer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}}],"sources":{"node_modules/pixi.js/lib/particles/ParticleContainer.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _utils = require('../core/utils');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The ParticleContainer class is a really fast version of the Container built solely for speed,\n * so use when you need a lot of sprites or particles. The tradeoff of the ParticleContainer is that most advanced\n * functionality will not work. ParticleContainer implements the basic object transform (position, scale, rotation)\n * and some advanced functionality like tint (as of v4.5.6).\n * Other more advanced functionality like masking, children, filters, etc will not work on sprites in this batch.\n *\n * It's extremely easy to use :\n *\n * ```js\n * let container = new ParticleContainer();\n *\n * for (let i = 0; i < 100; ++i)\n * {\n *     let sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\n *     container.addChild(sprite);\n * }\n * ```\n *\n * And here you have a hundred sprites that will be rendered at the speed of light.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.particles\n */\nvar ParticleContainer = function (_core$Container) {\n    _inherits(ParticleContainer, _core$Container);\n\n    /**\n     * @param {number} [maxSize=1500] - The maximum number of particles that can be rendered by the container.\n     *  Affects size of allocated buffers.\n     * @param {object} [properties] - The properties of children that should be uploaded to the gpu and applied.\n     * @param {boolean} [properties.vertices=false] - When true, vertices be uploaded and applied.\n     *                  if sprite's ` scale/anchor/trim/frame/orig` is dynamic, please set `true`.\n     * @param {boolean} [properties.position=true] - When true, position be uploaded and applied.\n     * @param {boolean} [properties.rotation=false] - When true, rotation be uploaded and applied.\n     * @param {boolean} [properties.uvs=false] - When true, uvs be uploaded and applied.\n     * @param {boolean} [properties.tint=false] - When true, alpha and tint be uploaded and applied.\n     * @param {number} [batchSize=16384] - Number of particles per batch. If less than maxSize, it uses maxSize instead.\n     * @param {boolean} [autoResize=false] If true, container allocates more batches in case\n     *  there are more than `maxSize` particles.\n     */\n    function ParticleContainer() {\n        var maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1500;\n        var properties = arguments[1];\n        var batchSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16384;\n        var autoResize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ParticleContainer);\n\n        // Making sure the batch size is valid\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n        var maxBatchSize = 16384;\n\n        if (batchSize > maxBatchSize) {\n            batchSize = maxBatchSize;\n        }\n\n        if (batchSize > maxSize) {\n            batchSize = maxSize;\n        }\n\n        /**\n         * Set properties to be dynamic (true) / static (false)\n         *\n         * @member {boolean[]}\n         * @private\n         */\n        _this._properties = [false, true, false, false, false];\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._maxSize = maxSize;\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._batchSize = batchSize;\n\n        /**\n         * @member {object<number, WebGLBuffer>}\n         * @private\n         */\n        _this._glBuffers = {};\n\n        /**\n         * for every batch stores _updateID corresponding to the last change in that batch\n         * @member {number[]}\n         * @private\n         */\n        _this._bufferUpdateIDs = [];\n\n        /**\n         * when child inserted, removed or changes position this number goes up\n         * @member {number[]}\n         * @private\n         */\n        _this._updateID = 0;\n\n        /**\n         * @member {boolean}\n         *\n         */\n        _this.interactiveChildren = false;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL`\n         * to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = core.BLEND_MODES.NORMAL;\n\n        /**\n         * If true, container allocates more batches in case there are more than `maxSize` particles.\n         * @member {boolean}\n         * @default false\n         */\n        _this.autoResize = autoResize;\n\n        /**\n         * Used for canvas renderering. If true then the elements will be positioned at the\n         * nearest pixel. This provides a nice speed boost.\n         *\n         * @member {boolean}\n         * @default true;\n         */\n        _this.roundPixels = true;\n\n        /**\n         * The texture used to render the children.\n         *\n         * @readonly\n         * @member {BaseTexture}\n         */\n        _this.baseTexture = null;\n\n        _this.setProperties(properties);\n\n        /**\n         * The tint applied to the container.\n         * This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this._tint = 0;\n        _this.tintRgb = new Float32Array(4);\n        _this.tint = 0xFFFFFF;\n        return _this;\n    }\n\n    /**\n     * Sets the private properties array to dynamic / static based on the passed properties object\n     *\n     * @param {object} properties - The properties to be uploaded\n     */\n\n\n    ParticleContainer.prototype.setProperties = function setProperties(properties) {\n        if (properties) {\n            this._properties[0] = 'vertices' in properties || 'scale' in properties ? !!properties.vertices || !!properties.scale : this._properties[0];\n            this._properties[1] = 'position' in properties ? !!properties.position : this._properties[1];\n            this._properties[2] = 'rotation' in properties ? !!properties.rotation : this._properties[2];\n            this._properties[3] = 'uvs' in properties ? !!properties.uvs : this._properties[3];\n            this._properties[4] = 'tint' in properties || 'alpha' in properties ? !!properties.tint || !!properties.alpha : this._properties[4];\n        }\n    };\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */\n\n\n    ParticleContainer.prototype.updateTransform = function updateTransform() {\n        // TODO don't need to!\n        this.displayObjectUpdateTransform();\n        //  PIXI.Container.prototype.updateTransform.call( this );\n    };\n\n    /**\n     * The tint applied to the container. This is a hex value.\n     * A value of 0xFFFFFF will remove any tint effect.\n     ** IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n\n\n    /**\n     * Renders the container using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The webgl renderer\n     */\n    ParticleContainer.prototype.renderWebGL = function renderWebGL(renderer) {\n        var _this2 = this;\n\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        if (!this.baseTexture) {\n            this.baseTexture = this.children[0]._texture.baseTexture;\n            if (!this.baseTexture.hasLoaded) {\n                this.baseTexture.once('update', function () {\n                    return _this2.onChildrenChange(0);\n                });\n            }\n        }\n\n        renderer.setObjectRenderer(renderer.plugins.particle);\n        renderer.plugins.particle.render(this);\n    };\n\n    /**\n     * Set the flag that static data should be updated to true\n     *\n     * @private\n     * @param {number} smallestChildIndex - The smallest child index\n     */\n\n\n    ParticleContainer.prototype.onChildrenChange = function onChildrenChange(smallestChildIndex) {\n        var bufferIndex = Math.floor(smallestChildIndex / this._batchSize);\n\n        while (this._bufferUpdateIDs.length < bufferIndex) {\n            this._bufferUpdateIDs.push(0);\n        }\n        this._bufferUpdateIDs[bufferIndex] = ++this._updateID;\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer\n     */\n\n\n    ParticleContainer.prototype.renderCanvas = function renderCanvas(renderer) {\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        var context = renderer.context;\n        var transform = this.worldTransform;\n        var isRotated = true;\n\n        var positionX = 0;\n        var positionY = 0;\n\n        var finalWidth = 0;\n        var finalHeight = 0;\n\n        renderer.setBlendMode(this.blendMode);\n\n        context.globalAlpha = this.worldAlpha;\n\n        this.displayObjectUpdateTransform();\n\n        for (var i = 0; i < this.children.length; ++i) {\n            var child = this.children[i];\n\n            if (!child.visible) {\n                continue;\n            }\n\n            var frame = child._texture.frame;\n\n            context.globalAlpha = this.worldAlpha * child.alpha;\n\n            if (child.rotation % (Math.PI * 2) === 0) {\n                // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n                if (isRotated) {\n                    context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx * renderer.resolution, transform.ty * renderer.resolution);\n\n                    isRotated = false;\n                }\n\n                positionX = child.anchor.x * (-frame.width * child.scale.x) + child.position.x + 0.5;\n                positionY = child.anchor.y * (-frame.height * child.scale.y) + child.position.y + 0.5;\n\n                finalWidth = frame.width * child.scale.x;\n                finalHeight = frame.height * child.scale.y;\n            } else {\n                if (!isRotated) {\n                    isRotated = true;\n                }\n\n                child.displayObjectUpdateTransform();\n\n                var childTransform = child.worldTransform;\n\n                if (renderer.roundPixels) {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution | 0, childTransform.ty * renderer.resolution | 0);\n                } else {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution, childTransform.ty * renderer.resolution);\n                }\n\n                positionX = child.anchor.x * -frame.width + 0.5;\n                positionY = child.anchor.y * -frame.height + 0.5;\n\n                finalWidth = frame.width;\n                finalHeight = frame.height;\n            }\n\n            var resolution = child._texture.baseTexture.resolution;\n\n            context.drawImage(child._texture.baseTexture.source, frame.x * resolution, frame.y * resolution, frame.width * resolution, frame.height * resolution, positionX * renderer.resolution, positionY * renderer.resolution, finalWidth * renderer.resolution, finalHeight * renderer.resolution);\n        }\n    };\n\n    /**\n     * Destroys the container\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n\n\n    ParticleContainer.prototype.destroy = function destroy(options) {\n        _core$Container.prototype.destroy.call(this, options);\n\n        if (this._buffers) {\n            for (var i = 0; i < this._buffers.length; ++i) {\n                this._buffers[i].destroy();\n            }\n        }\n\n        this._properties = null;\n        this._buffers = null;\n        this._bufferUpdateIDs = null;\n    };\n\n    _createClass(ParticleContainer, [{\n        key: 'tint',\n        get: function get() {\n            return this._tint;\n        },\n        set: function set(value) // eslint-disable-line require-jsdoc\n        {\n            this._tint = value;\n            (0, _utils.hex2rgb)(value, this.tintRgb);\n        }\n    }]);\n\n    return ParticleContainer;\n}(core.Container);\n\nexports.default = ParticleContainer;\n//# sourceMappingURL=ParticleContainer.js.map"},"lineCount":389}},"hash":"37804cd6977d0a90058b7f5afc698b2c","cacheData":{"env":{}}}