{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"./BaseRenderTexture","loc":{"line":5,"column":33}},{"name":"./Texture","loc":{"line":9,"column":24}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _BaseRenderTexture = require('./BaseRenderTexture');\n\nvar _BaseRenderTexture2 = _interopRequireDefault(_BaseRenderTexture);\n\nvar _Texture2 = require('./Texture');\n\nvar _Texture3 = _interopRequireDefault(_Texture2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A RenderTexture is a special texture that allows any PixiJS display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let renderTexture = PIXI.RenderTexture.create(800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let renderTexture = new PIXI.RenderTexture.create(100, 100);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends PIXI.Texture\n * @memberof PIXI\n */\nvar RenderTexture = function (_Texture) {\n    _inherits(RenderTexture, _Texture);\n\n    /**\n     * @param {PIXI.BaseRenderTexture} baseRenderTexture - The renderer used for this RenderTexture\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    function RenderTexture(baseRenderTexture, frame) {\n        _classCallCheck(this, RenderTexture);\n\n        // support for legacy..\n        var _legacyRenderer = null;\n\n        if (!(baseRenderTexture instanceof _BaseRenderTexture2.default)) {\n            /* eslint-disable prefer-rest-params, no-console */\n            var width = arguments[1];\n            var height = arguments[2];\n            var scaleMode = arguments[3];\n            var resolution = arguments[4];\n\n            // we have an old render texture..\n            console.warn('Please use RenderTexture.create(' + width + ', ' + height + ') instead of the ctor directly.');\n            _legacyRenderer = arguments[0];\n            /* eslint-enable prefer-rest-params, no-console */\n\n            frame = null;\n            baseRenderTexture = new _BaseRenderTexture2.default(width, height, scaleMode, resolution);\n        }\n\n        /**\n         * The base texture object that this texture uses\n         *\n         * @member {BaseTexture}\n         */\n\n        var _this = _possibleConstructorReturn(this, _Texture.call(this, baseRenderTexture, frame));\n\n        _this.legacyRenderer = _legacyRenderer;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = true;\n\n        _this._updateUvs();\n        return _this;\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} doNotResizeBaseTexture - Should the baseTexture.width and height values be resized as well?\n     */\n\n\n    RenderTexture.prototype.resize = function resize(width, height, doNotResizeBaseTexture) {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        // TODO - could be not required..\n        this.valid = width > 0 && height > 0;\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (!doNotResizeBaseTexture) {\n            this.baseTexture.resize(width, height);\n        }\n\n        this._updateUvs();\n    };\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {number} [width=100] - The width of the render texture\n     * @param {number} [height=100] - The height of the render texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.RenderTexture} The new render texture\n     */\n\n\n    RenderTexture.create = function create(width, height, scaleMode, resolution) {\n        return new RenderTexture(new _BaseRenderTexture2.default(width, height, scaleMode, resolution));\n    };\n\n    return RenderTexture;\n}(_Texture3.default);\n\nexports.default = RenderTexture;\n//# sourceMappingURL=RenderTexture.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixi.js/lib/core/textures/RenderTexture.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}}],"sources":{"node_modules/pixi.js/lib/core/textures/RenderTexture.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _BaseRenderTexture = require('./BaseRenderTexture');\n\nvar _BaseRenderTexture2 = _interopRequireDefault(_BaseRenderTexture);\n\nvar _Texture2 = require('./Texture');\n\nvar _Texture3 = _interopRequireDefault(_Texture2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A RenderTexture is a special texture that allows any PixiJS display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let renderTexture = PIXI.RenderTexture.create(800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let renderTexture = new PIXI.RenderTexture.create(100, 100);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends PIXI.Texture\n * @memberof PIXI\n */\nvar RenderTexture = function (_Texture) {\n    _inherits(RenderTexture, _Texture);\n\n    /**\n     * @param {PIXI.BaseRenderTexture} baseRenderTexture - The renderer used for this RenderTexture\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    function RenderTexture(baseRenderTexture, frame) {\n        _classCallCheck(this, RenderTexture);\n\n        // support for legacy..\n        var _legacyRenderer = null;\n\n        if (!(baseRenderTexture instanceof _BaseRenderTexture2.default)) {\n            /* eslint-disable prefer-rest-params, no-console */\n            var width = arguments[1];\n            var height = arguments[2];\n            var scaleMode = arguments[3];\n            var resolution = arguments[4];\n\n            // we have an old render texture..\n            console.warn('Please use RenderTexture.create(' + width + ', ' + height + ') instead of the ctor directly.');\n            _legacyRenderer = arguments[0];\n            /* eslint-enable prefer-rest-params, no-console */\n\n            frame = null;\n            baseRenderTexture = new _BaseRenderTexture2.default(width, height, scaleMode, resolution);\n        }\n\n        /**\n         * The base texture object that this texture uses\n         *\n         * @member {BaseTexture}\n         */\n\n        var _this = _possibleConstructorReturn(this, _Texture.call(this, baseRenderTexture, frame));\n\n        _this.legacyRenderer = _legacyRenderer;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = true;\n\n        _this._updateUvs();\n        return _this;\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} doNotResizeBaseTexture - Should the baseTexture.width and height values be resized as well?\n     */\n\n\n    RenderTexture.prototype.resize = function resize(width, height, doNotResizeBaseTexture) {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        // TODO - could be not required..\n        this.valid = width > 0 && height > 0;\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (!doNotResizeBaseTexture) {\n            this.baseTexture.resize(width, height);\n        }\n\n        this._updateUvs();\n    };\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {number} [width=100] - The width of the render texture\n     * @param {number} [height=100] - The height of the render texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.RenderTexture} The new render texture\n     */\n\n\n    RenderTexture.create = function create(width, height, scaleMode, resolution) {\n        return new RenderTexture(new _BaseRenderTexture2.default(width, height, scaleMode, resolution));\n    };\n\n    return RenderTexture;\n}(_Texture3.default);\n\nexports.default = RenderTexture;\n//# sourceMappingURL=RenderTexture.js.map"},"lineCount":153}},"hash":"f7dd400146d1fe4a611bf98d1f6978e2","cacheData":{"env":{}}}