{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"../Point","loc":{"line":5,"column":21}},{"name":"../../const","loc":{"line":9,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _Point = require('../Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _const = require('../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n * @memberof PIXI\n */\nvar Polygon = function () {\n    /**\n     * @param {PIXI.Point[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    function Polygon() {\n        for (var _len = arguments.length, points = Array(_len), _key = 0; _key < _len; _key++) {\n            points[_key] = arguments[_key];\n        }\n\n        _classCallCheck(this, Polygon);\n\n        if (Array.isArray(points[0])) {\n            points = points[0];\n        }\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (points[0] instanceof _Point2.default) {\n            var p = [];\n\n            for (var i = 0, il = points.length; i < il; i++) {\n                p.push(points[i].x, points[i].y);\n            }\n\n            points = p;\n        }\n\n        this.closed = true;\n\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = points;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.POLY\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.POLY;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */\n\n\n    Polygon.prototype.clone = function clone() {\n        return new Polygon(this.points.slice());\n    };\n\n    /**\n     * Closes the polygon, adding points if necessary.\n     *\n     */\n\n\n    Polygon.prototype.close = function close() {\n        var points = this.points;\n\n        // close the poly if the value is true!\n        if (points[0] !== points[points.length - 2] || points[1] !== points[points.length - 1]) {\n            points.push(points[0], points[1]);\n        }\n    };\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n\n\n    Polygon.prototype.contains = function contains(x, y) {\n        var inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        var length = this.points.length / 2;\n\n        for (var i = 0, j = length - 1; i < length; j = i++) {\n            var xi = this.points[i * 2];\n            var yi = this.points[i * 2 + 1];\n            var xj = this.points[j * 2];\n            var yj = this.points[j * 2 + 1];\n            var intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    };\n\n    return Polygon;\n}();\n\nexports.default = Polygon;\n//# sourceMappingURL=Polygon.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/core/math/shapes/Polygon.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}}],"sources":{"node_modules/pixi.js/lib/core/math/shapes/Polygon.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _Point = require('../Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _const = require('../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n * @memberof PIXI\n */\nvar Polygon = function () {\n    /**\n     * @param {PIXI.Point[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    function Polygon() {\n        for (var _len = arguments.length, points = Array(_len), _key = 0; _key < _len; _key++) {\n            points[_key] = arguments[_key];\n        }\n\n        _classCallCheck(this, Polygon);\n\n        if (Array.isArray(points[0])) {\n            points = points[0];\n        }\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (points[0] instanceof _Point2.default) {\n            var p = [];\n\n            for (var i = 0, il = points.length; i < il; i++) {\n                p.push(points[i].x, points[i].y);\n            }\n\n            points = p;\n        }\n\n        this.closed = true;\n\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = points;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.POLY\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.POLY;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */\n\n\n    Polygon.prototype.clone = function clone() {\n        return new Polygon(this.points.slice());\n    };\n\n    /**\n     * Closes the polygon, adding points if necessary.\n     *\n     */\n\n\n    Polygon.prototype.close = function close() {\n        var points = this.points;\n\n        // close the poly if the value is true!\n        if (points[0] !== points[points.length - 2] || points[1] !== points[points.length - 1]) {\n            points.push(points[0], points[1]);\n        }\n    };\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n\n\n    Polygon.prototype.contains = function contains(x, y) {\n        var inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        var length = this.points.length / 2;\n\n        for (var i = 0, j = length - 1; i < length; j = i++) {\n            var xi = this.points[i * 2];\n            var yi = this.points[i * 2 + 1];\n            var xj = this.points[j * 2];\n            var yj = this.points[j * 2 + 1];\n            var intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    };\n\n    return Polygon;\n}();\n\nexports.default = Polygon;\n//# sourceMappingURL=Polygon.js.map"},"lineCount":130}},"hash":"fd9f72a0b7e8f732ff50d2c6f899c2b1","cacheData":{"env":{}}}