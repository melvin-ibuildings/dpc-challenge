{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214},{"name":"../../core","loc":{"line":5,"column":20}},{"name":"../Mesh","loc":{"line":9,"column":20}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _Mesh = require('../Mesh');\n\nvar _Mesh2 = _interopRequireDefault(_Mesh);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Renderer dedicated to meshes.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar MeshSpriteRenderer = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The renderer this downport works for\n     */\n    function MeshSpriteRenderer(renderer) {\n        _classCallCheck(this, MeshSpriteRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the Mesh\n     *\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.render = function render(mesh) {\n        var renderer = this.renderer;\n        var context = renderer.context;\n\n        var transform = mesh.worldTransform;\n        var res = renderer.resolution;\n\n        if (renderer.roundPixels) {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res | 0, transform.ty * res | 0);\n        } else {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res, transform.ty * res);\n        }\n\n        renderer.context.globalAlpha = mesh.worldAlpha;\n        renderer.setBlendMode(mesh.blendMode);\n\n        if (mesh.drawMode === _Mesh2.default.DRAW_MODES.TRIANGLE_MESH) {\n            this._renderTriangleMesh(mesh);\n        } else {\n            this._renderTriangles(mesh);\n        }\n    };\n\n    /**\n     * Draws the object in Triangle Mesh mode\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangleMesh = function _renderTriangleMesh(mesh) {\n        // draw triangles!!\n        var length = mesh.vertices.length / 2;\n\n        for (var i = 0; i < length - 2; i++) {\n            // draw some triangles!\n            var index = i * 2;\n\n            this._renderDrawTriangle(mesh, index, index + 2, index + 4);\n        }\n    };\n\n    /**\n     * Draws the object in triangle mode using canvas\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangles = function _renderTriangles(mesh) {\n        // draw triangles!!\n        var indices = mesh.indices;\n        var length = indices.length;\n\n        for (var i = 0; i < length; i += 3) {\n            // draw some triangles!\n            var index0 = indices[i] * 2;\n            var index1 = indices[i + 1] * 2;\n            var index2 = indices[i + 2] * 2;\n\n            this._renderDrawTriangle(mesh, index0, index1, index2);\n        }\n    };\n\n    /**\n     * Draws one of the triangles that from the Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     * @param {number} index0 - the index of the first vertex\n     * @param {number} index1 - the index of the second vertex\n     * @param {number} index2 - the index of the third vertex\n     */\n\n\n    MeshSpriteRenderer.prototype._renderDrawTriangle = function _renderDrawTriangle(mesh, index0, index1, index2) {\n        var context = this.renderer.context;\n        var uvs = mesh.uvs;\n        var vertices = mesh.vertices;\n        var texture = mesh._texture;\n\n        if (!texture.valid) {\n            return;\n        }\n\n        var base = texture.baseTexture;\n        var textureSource = base.source;\n        var textureWidth = base.width;\n        var textureHeight = base.height;\n\n        var u0 = void 0;\n        var u1 = void 0;\n        var u2 = void 0;\n        var v0 = void 0;\n        var v1 = void 0;\n        var v2 = void 0;\n\n        if (mesh.uploadUvTransform) {\n            var ut = mesh._uvTransform.mapCoord;\n\n            u0 = (uvs[index0] * ut.a + uvs[index0 + 1] * ut.c + ut.tx) * base.width;\n            u1 = (uvs[index1] * ut.a + uvs[index1 + 1] * ut.c + ut.tx) * base.width;\n            u2 = (uvs[index2] * ut.a + uvs[index2 + 1] * ut.c + ut.tx) * base.width;\n            v0 = (uvs[index0] * ut.b + uvs[index0 + 1] * ut.d + ut.ty) * base.height;\n            v1 = (uvs[index1] * ut.b + uvs[index1 + 1] * ut.d + ut.ty) * base.height;\n            v2 = (uvs[index2] * ut.b + uvs[index2 + 1] * ut.d + ut.ty) * base.height;\n        } else {\n            u0 = uvs[index0] * base.width;\n            u1 = uvs[index1] * base.width;\n            u2 = uvs[index2] * base.width;\n            v0 = uvs[index0 + 1] * base.height;\n            v1 = uvs[index1 + 1] * base.height;\n            v2 = uvs[index2 + 1] * base.height;\n        }\n\n        var x0 = vertices[index0];\n        var x1 = vertices[index1];\n        var x2 = vertices[index2];\n        var y0 = vertices[index0 + 1];\n        var y1 = vertices[index1 + 1];\n        var y2 = vertices[index2 + 1];\n\n        var canvasPadding = mesh.canvasPadding / this.renderer.resolution;\n\n        if (canvasPadding > 0) {\n            var paddingX = canvasPadding / Math.abs(mesh.worldTransform.a);\n            var paddingY = canvasPadding / Math.abs(mesh.worldTransform.d);\n            var centerX = (x0 + x1 + x2) / 3;\n            var centerY = (y0 + y1 + y2) / 3;\n\n            var normX = x0 - centerX;\n            var normY = y0 - centerY;\n\n            var dist = Math.sqrt(normX * normX + normY * normY);\n\n            x0 = centerX + normX / dist * (dist + paddingX);\n            y0 = centerY + normY / dist * (dist + paddingY);\n\n            //\n\n            normX = x1 - centerX;\n            normY = y1 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x1 = centerX + normX / dist * (dist + paddingX);\n            y1 = centerY + normY / dist * (dist + paddingY);\n\n            normX = x2 - centerX;\n            normY = y2 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x2 = centerX + normX / dist * (dist + paddingX);\n            y2 = centerY + normY / dist * (dist + paddingY);\n        }\n\n        context.save();\n        context.beginPath();\n\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.lineTo(x2, y2);\n\n        context.closePath();\n\n        context.clip();\n\n        // Compute matrix transform\n        var delta = u0 * v1 + v0 * u2 + u1 * v2 - v1 * u2 - v0 * u1 - u0 * v2;\n        var deltaA = x0 * v1 + v0 * x2 + x1 * v2 - v1 * x2 - v0 * x1 - x0 * v2;\n        var deltaB = u0 * x1 + x0 * u2 + u1 * x2 - x1 * u2 - x0 * u1 - u0 * x2;\n        var deltaC = u0 * v1 * x2 + v0 * x1 * u2 + x0 * u1 * v2 - x0 * v1 * u2 - v0 * u1 * x2 - u0 * x1 * v2;\n        var deltaD = y0 * v1 + v0 * y2 + y1 * v2 - v1 * y2 - v0 * y1 - y0 * v2;\n        var deltaE = u0 * y1 + y0 * u2 + u1 * y2 - y1 * u2 - y0 * u1 - u0 * y2;\n        var deltaF = u0 * v1 * y2 + v0 * y1 * u2 + y0 * u1 * v2 - y0 * v1 * u2 - v0 * u1 * y2 - u0 * y1 * v2;\n\n        context.transform(deltaA / delta, deltaD / delta, deltaB / delta, deltaE / delta, deltaC / delta, deltaF / delta);\n\n        context.drawImage(textureSource, 0, 0, textureWidth * base.resolution, textureHeight * base.resolution, 0, 0, textureWidth, textureHeight);\n\n        context.restore();\n        this.renderer.invalidateBlendMode();\n    };\n\n    /**\n     * Renders a flat Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - The Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.renderMeshFlat = function renderMeshFlat(mesh) {\n        var context = this.renderer.context;\n        var vertices = mesh.vertices;\n        var length = vertices.length / 2;\n\n        // this.count++;\n\n        context.beginPath();\n\n        for (var i = 1; i < length - 2; ++i) {\n            // draw some triangles!\n            var index = i * 2;\n\n            var x0 = vertices[index];\n            var y0 = vertices[index + 1];\n\n            var x1 = vertices[index + 2];\n            var y1 = vertices[index + 3];\n\n            var x2 = vertices[index + 4];\n            var y2 = vertices[index + 5];\n\n            context.moveTo(x0, y0);\n            context.lineTo(x1, y1);\n            context.lineTo(x2, y2);\n        }\n\n        context.fillStyle = '#FF0000';\n        context.fill();\n        context.closePath();\n    };\n\n    /**\n     * destroy the the renderer.\n     *\n     */\n\n\n    MeshSpriteRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return MeshSpriteRenderer;\n}();\n\nexports.default = MeshSpriteRenderer;\n\n\ncore.CanvasRenderer.registerPlugin('mesh', MeshSpriteRenderer);\n//# sourceMappingURL=CanvasMeshRenderer.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}}],"sources":{"node_modules/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _Mesh = require('../Mesh');\n\nvar _Mesh2 = _interopRequireDefault(_Mesh);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Renderer dedicated to meshes.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar MeshSpriteRenderer = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The renderer this downport works for\n     */\n    function MeshSpriteRenderer(renderer) {\n        _classCallCheck(this, MeshSpriteRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the Mesh\n     *\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.render = function render(mesh) {\n        var renderer = this.renderer;\n        var context = renderer.context;\n\n        var transform = mesh.worldTransform;\n        var res = renderer.resolution;\n\n        if (renderer.roundPixels) {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res | 0, transform.ty * res | 0);\n        } else {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res, transform.ty * res);\n        }\n\n        renderer.context.globalAlpha = mesh.worldAlpha;\n        renderer.setBlendMode(mesh.blendMode);\n\n        if (mesh.drawMode === _Mesh2.default.DRAW_MODES.TRIANGLE_MESH) {\n            this._renderTriangleMesh(mesh);\n        } else {\n            this._renderTriangles(mesh);\n        }\n    };\n\n    /**\n     * Draws the object in Triangle Mesh mode\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangleMesh = function _renderTriangleMesh(mesh) {\n        // draw triangles!!\n        var length = mesh.vertices.length / 2;\n\n        for (var i = 0; i < length - 2; i++) {\n            // draw some triangles!\n            var index = i * 2;\n\n            this._renderDrawTriangle(mesh, index, index + 2, index + 4);\n        }\n    };\n\n    /**\n     * Draws the object in triangle mode using canvas\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangles = function _renderTriangles(mesh) {\n        // draw triangles!!\n        var indices = mesh.indices;\n        var length = indices.length;\n\n        for (var i = 0; i < length; i += 3) {\n            // draw some triangles!\n            var index0 = indices[i] * 2;\n            var index1 = indices[i + 1] * 2;\n            var index2 = indices[i + 2] * 2;\n\n            this._renderDrawTriangle(mesh, index0, index1, index2);\n        }\n    };\n\n    /**\n     * Draws one of the triangles that from the Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     * @param {number} index0 - the index of the first vertex\n     * @param {number} index1 - the index of the second vertex\n     * @param {number} index2 - the index of the third vertex\n     */\n\n\n    MeshSpriteRenderer.prototype._renderDrawTriangle = function _renderDrawTriangle(mesh, index0, index1, index2) {\n        var context = this.renderer.context;\n        var uvs = mesh.uvs;\n        var vertices = mesh.vertices;\n        var texture = mesh._texture;\n\n        if (!texture.valid) {\n            return;\n        }\n\n        var base = texture.baseTexture;\n        var textureSource = base.source;\n        var textureWidth = base.width;\n        var textureHeight = base.height;\n\n        var u0 = void 0;\n        var u1 = void 0;\n        var u2 = void 0;\n        var v0 = void 0;\n        var v1 = void 0;\n        var v2 = void 0;\n\n        if (mesh.uploadUvTransform) {\n            var ut = mesh._uvTransform.mapCoord;\n\n            u0 = (uvs[index0] * ut.a + uvs[index0 + 1] * ut.c + ut.tx) * base.width;\n            u1 = (uvs[index1] * ut.a + uvs[index1 + 1] * ut.c + ut.tx) * base.width;\n            u2 = (uvs[index2] * ut.a + uvs[index2 + 1] * ut.c + ut.tx) * base.width;\n            v0 = (uvs[index0] * ut.b + uvs[index0 + 1] * ut.d + ut.ty) * base.height;\n            v1 = (uvs[index1] * ut.b + uvs[index1 + 1] * ut.d + ut.ty) * base.height;\n            v2 = (uvs[index2] * ut.b + uvs[index2 + 1] * ut.d + ut.ty) * base.height;\n        } else {\n            u0 = uvs[index0] * base.width;\n            u1 = uvs[index1] * base.width;\n            u2 = uvs[index2] * base.width;\n            v0 = uvs[index0 + 1] * base.height;\n            v1 = uvs[index1 + 1] * base.height;\n            v2 = uvs[index2 + 1] * base.height;\n        }\n\n        var x0 = vertices[index0];\n        var x1 = vertices[index1];\n        var x2 = vertices[index2];\n        var y0 = vertices[index0 + 1];\n        var y1 = vertices[index1 + 1];\n        var y2 = vertices[index2 + 1];\n\n        var canvasPadding = mesh.canvasPadding / this.renderer.resolution;\n\n        if (canvasPadding > 0) {\n            var paddingX = canvasPadding / Math.abs(mesh.worldTransform.a);\n            var paddingY = canvasPadding / Math.abs(mesh.worldTransform.d);\n            var centerX = (x0 + x1 + x2) / 3;\n            var centerY = (y0 + y1 + y2) / 3;\n\n            var normX = x0 - centerX;\n            var normY = y0 - centerY;\n\n            var dist = Math.sqrt(normX * normX + normY * normY);\n\n            x0 = centerX + normX / dist * (dist + paddingX);\n            y0 = centerY + normY / dist * (dist + paddingY);\n\n            //\n\n            normX = x1 - centerX;\n            normY = y1 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x1 = centerX + normX / dist * (dist + paddingX);\n            y1 = centerY + normY / dist * (dist + paddingY);\n\n            normX = x2 - centerX;\n            normY = y2 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x2 = centerX + normX / dist * (dist + paddingX);\n            y2 = centerY + normY / dist * (dist + paddingY);\n        }\n\n        context.save();\n        context.beginPath();\n\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.lineTo(x2, y2);\n\n        context.closePath();\n\n        context.clip();\n\n        // Compute matrix transform\n        var delta = u0 * v1 + v0 * u2 + u1 * v2 - v1 * u2 - v0 * u1 - u0 * v2;\n        var deltaA = x0 * v1 + v0 * x2 + x1 * v2 - v1 * x2 - v0 * x1 - x0 * v2;\n        var deltaB = u0 * x1 + x0 * u2 + u1 * x2 - x1 * u2 - x0 * u1 - u0 * x2;\n        var deltaC = u0 * v1 * x2 + v0 * x1 * u2 + x0 * u1 * v2 - x0 * v1 * u2 - v0 * u1 * x2 - u0 * x1 * v2;\n        var deltaD = y0 * v1 + v0 * y2 + y1 * v2 - v1 * y2 - v0 * y1 - y0 * v2;\n        var deltaE = u0 * y1 + y0 * u2 + u1 * y2 - y1 * u2 - y0 * u1 - u0 * y2;\n        var deltaF = u0 * v1 * y2 + v0 * y1 * u2 + y0 * u1 * v2 - y0 * v1 * u2 - v0 * u1 * y2 - u0 * y1 * v2;\n\n        context.transform(deltaA / delta, deltaD / delta, deltaB / delta, deltaE / delta, deltaC / delta, deltaF / delta);\n\n        context.drawImage(textureSource, 0, 0, textureWidth * base.resolution, textureHeight * base.resolution, 0, 0, textureWidth, textureHeight);\n\n        context.restore();\n        this.renderer.invalidateBlendMode();\n    };\n\n    /**\n     * Renders a flat Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - The Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.renderMeshFlat = function renderMeshFlat(mesh) {\n        var context = this.renderer.context;\n        var vertices = mesh.vertices;\n        var length = vertices.length / 2;\n\n        // this.count++;\n\n        context.beginPath();\n\n        for (var i = 1; i < length - 2; ++i) {\n            // draw some triangles!\n            var index = i * 2;\n\n            var x0 = vertices[index];\n            var y0 = vertices[index + 1];\n\n            var x1 = vertices[index + 2];\n            var y1 = vertices[index + 3];\n\n            var x2 = vertices[index + 4];\n            var y2 = vertices[index + 5];\n\n            context.moveTo(x0, y0);\n            context.lineTo(x1, y1);\n            context.lineTo(x2, y2);\n        }\n\n        context.fillStyle = '#FF0000';\n        context.fill();\n        context.closePath();\n    };\n\n    /**\n     * destroy the the renderer.\n     *\n     */\n\n\n    MeshSpriteRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return MeshSpriteRenderer;\n}();\n\nexports.default = MeshSpriteRenderer;\n\n\ncore.CanvasRenderer.registerPlugin('mesh', MeshSpriteRenderer);\n//# sourceMappingURL=CanvasMeshRenderer.js.map"},"lineCount":285}},"hash":"d8512ef61dbfffa0e10e0a4f61ce89fa","cacheData":{"env":{}}}