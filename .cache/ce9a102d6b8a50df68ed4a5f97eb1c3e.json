{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/resource-loader/package.json","includedInParent":true,"mtime":1528375666938}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.eachSeries = eachSeries;\nexports.queue = queue;\n/**\n * Smaller version of the async library constructs.\n *\n */\nfunction _noop() {} /* empty */\n\n/**\n * Iterates an array in series.\n *\n * @param {Array.<*>} array - Array to iterate.\n * @param {function} iterator - Function to call for each element.\n * @param {function} callback - Function to call when done, or on error.\n * @param {boolean} [deferNext=false] - Break synchronous each loop by calling next with a setTimeout of 1.\n */\nfunction eachSeries(array, iterator, callback, deferNext) {\n    var i = 0;\n    var len = array.length;\n\n    (function next(err) {\n        if (err || i === len) {\n            if (callback) {\n                callback(err);\n            }\n\n            return;\n        }\n\n        if (deferNext) {\n            setTimeout(function () {\n                iterator(array[i++], next);\n            }, 1);\n        } else {\n            iterator(array[i++], next);\n        }\n    })();\n}\n\n/**\n * Ensures a function is only called once.\n *\n * @param {function} fn - The function to wrap.\n * @return {function} The wrapping function.\n */\nfunction onlyOnce(fn) {\n    return function onceWrapper() {\n        if (fn === null) {\n            throw new Error('Callback was already called.');\n        }\n\n        var callFn = fn;\n\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\n/**\n * Async queue implementation,\n *\n * @param {function} worker - The worker function to call for each task.\n * @param {number} concurrency - How many workers to run in parrallel.\n * @return {*} The async queue object.\n */\nfunction queue(worker, concurrency) {\n    if (concurrency == null) {\n        // eslint-disable-line no-eq-null,eqeqeq\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var q = {\n        _tasks: [],\n        concurrency: concurrency,\n        saturated: _noop,\n        unsaturated: _noop,\n        buffer: concurrency / 4,\n        empty: _noop,\n        drain: _noop,\n        error: _noop,\n        started: false,\n        paused: false,\n        push: function push(data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function kill() {\n            workers = 0;\n            q.drain = _noop;\n            q.started = false;\n            q._tasks = [];\n        },\n        unshift: function unshift(data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function process() {\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var task = q._tasks.shift();\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                workers += 1;\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                worker(task.data, onlyOnce(_next(task)));\n            }\n        },\n        length: function length() {\n            return q._tasks.length;\n        },\n        running: function running() {\n            return workers;\n        },\n        idle: function idle() {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function pause() {\n            if (q.paused === true) {\n                return;\n            }\n\n            q.paused = true;\n        },\n        resume: function resume() {\n            if (q.paused === false) {\n                return;\n            }\n\n            q.paused = false;\n\n            // Need to call q.process once per concurrent\n            // worker to preserve full concurrency after pause\n            for (var w = 1; w <= q.concurrency; w++) {\n                q.process();\n            }\n        }\n    };\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            // eslint-disable-line no-eq-null,eqeqeq\n            throw new Error('task callback must be a function');\n        }\n\n        q.started = true;\n\n        if (data == null && q.idle()) {\n            // eslint-disable-line no-eq-null,eqeqeq\n            // call drain immediately if there are no tasks\n            setTimeout(function () {\n                return q.drain();\n            }, 1);\n\n            return;\n        }\n\n        var item = {\n            data: data,\n            callback: typeof callback === 'function' ? callback : _noop\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        setTimeout(function () {\n            return q.process();\n        }, 1);\n    }\n\n    function _next(task) {\n        return function next() {\n            workers -= 1;\n\n            task.callback.apply(task, arguments);\n\n            if (arguments[0] != null) {\n                // eslint-disable-line no-eq-null,eqeqeq\n                q.error(arguments[0], task.data);\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n\n            q.process();\n        };\n    }\n\n    return q;\n}\n//# sourceMappingURL=async.js.map","map":{"mappings":[{"source":"node_modules/resource-loader/lib/async.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/resource-loader/lib/async.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}}],"sources":{"node_modules/resource-loader/lib/async.js":"'use strict';\n\nexports.__esModule = true;\nexports.eachSeries = eachSeries;\nexports.queue = queue;\n/**\n * Smaller version of the async library constructs.\n *\n */\nfunction _noop() {} /* empty */\n\n/**\n * Iterates an array in series.\n *\n * @param {Array.<*>} array - Array to iterate.\n * @param {function} iterator - Function to call for each element.\n * @param {function} callback - Function to call when done, or on error.\n * @param {boolean} [deferNext=false] - Break synchronous each loop by calling next with a setTimeout of 1.\n */\nfunction eachSeries(array, iterator, callback, deferNext) {\n    var i = 0;\n    var len = array.length;\n\n    (function next(err) {\n        if (err || i === len) {\n            if (callback) {\n                callback(err);\n            }\n\n            return;\n        }\n\n        if (deferNext) {\n            setTimeout(function () {\n                iterator(array[i++], next);\n            }, 1);\n        } else {\n            iterator(array[i++], next);\n        }\n    })();\n}\n\n/**\n * Ensures a function is only called once.\n *\n * @param {function} fn - The function to wrap.\n * @return {function} The wrapping function.\n */\nfunction onlyOnce(fn) {\n    return function onceWrapper() {\n        if (fn === null) {\n            throw new Error('Callback was already called.');\n        }\n\n        var callFn = fn;\n\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\n/**\n * Async queue implementation,\n *\n * @param {function} worker - The worker function to call for each task.\n * @param {number} concurrency - How many workers to run in parrallel.\n * @return {*} The async queue object.\n */\nfunction queue(worker, concurrency) {\n    if (concurrency == null) {\n        // eslint-disable-line no-eq-null,eqeqeq\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var q = {\n        _tasks: [],\n        concurrency: concurrency,\n        saturated: _noop,\n        unsaturated: _noop,\n        buffer: concurrency / 4,\n        empty: _noop,\n        drain: _noop,\n        error: _noop,\n        started: false,\n        paused: false,\n        push: function push(data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function kill() {\n            workers = 0;\n            q.drain = _noop;\n            q.started = false;\n            q._tasks = [];\n        },\n        unshift: function unshift(data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function process() {\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var task = q._tasks.shift();\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                workers += 1;\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                worker(task.data, onlyOnce(_next(task)));\n            }\n        },\n        length: function length() {\n            return q._tasks.length;\n        },\n        running: function running() {\n            return workers;\n        },\n        idle: function idle() {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function pause() {\n            if (q.paused === true) {\n                return;\n            }\n\n            q.paused = true;\n        },\n        resume: function resume() {\n            if (q.paused === false) {\n                return;\n            }\n\n            q.paused = false;\n\n            // Need to call q.process once per concurrent\n            // worker to preserve full concurrency after pause\n            for (var w = 1; w <= q.concurrency; w++) {\n                q.process();\n            }\n        }\n    };\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            // eslint-disable-line no-eq-null,eqeqeq\n            throw new Error('task callback must be a function');\n        }\n\n        q.started = true;\n\n        if (data == null && q.idle()) {\n            // eslint-disable-line no-eq-null,eqeqeq\n            // call drain immediately if there are no tasks\n            setTimeout(function () {\n                return q.drain();\n            }, 1);\n\n            return;\n        }\n\n        var item = {\n            data: data,\n            callback: typeof callback === 'function' ? callback : _noop\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        setTimeout(function () {\n            return q.process();\n        }, 1);\n    }\n\n    function _next(task) {\n        return function next() {\n            workers -= 1;\n\n            task.callback.apply(task, arguments);\n\n            if (arguments[0] != null) {\n                // eslint-disable-line no-eq-null,eqeqeq\n                q.error(arguments[0], task.data);\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n\n            q.process();\n        };\n    }\n\n    return q;\n}\n//# sourceMappingURL=async.js.map"},"lineCount":208}},"hash":"39ca83ecd9def5723e52b3bf6682fc56","cacheData":{"env":{}}}