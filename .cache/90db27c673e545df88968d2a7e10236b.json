{"dependencies":[{"name":"/home/melvin/PhpstormProjects/gjx/package.json","includedInParent":true,"mtime":1528375847532},{"name":"/home/melvin/PhpstormProjects/gjx/.babelrc","includedInParent":true,"mtime":1528358458908},{"name":"/home/melvin/PhpstormProjects/gjx/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1528375667214}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The TextMetrics object represents the measurement of a block of text with a specified style.\n *\n * ```js\n * let style = new PIXI.TextStyle({fontFamily : 'Arial', fontSize: 24, fill : 0xff1010, align : 'center'})\n * let textMetrics = PIXI.TextMetrics.measureText('Your text', style)\n * ```\n *\n * @class\n * @memberOf PIXI\n */\nvar TextMetrics = function () {\n    /**\n     * @param {string} text - the text that was measured\n     * @param {PIXI.TextStyle} style - the style that was measured\n     * @param {number} width - the measured width of the text\n     * @param {number} height - the measured height of the text\n     * @param {array} lines - an array of the lines of text broken by new lines and wrapping if specified in style\n     * @param {array} lineWidths - an array of the line widths for each line matched to `lines`\n     * @param {number} lineHeight - the measured line height for this style\n     * @param {number} maxLineWidth - the maximum line width for all measured lines\n     * @param {Object} fontProperties - the font properties object from TextMetrics.measureFont\n     */\n    function TextMetrics(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n        _classCallCheck(this, TextMetrics);\n\n        this.text = text;\n        this.style = style;\n        this.width = width;\n        this.height = height;\n        this.lines = lines;\n        this.lineWidths = lineWidths;\n        this.lineHeight = lineHeight;\n        this.maxLineWidth = maxLineWidth;\n        this.fontProperties = fontProperties;\n    }\n\n    /**\n     * Measures the supplied string of text and returns a Rectangle.\n     *\n     * @param {string} text - the text to measure.\n     * @param {PIXI.TextStyle} style - the text style to use for measuring\n     * @param {boolean} [wordWrap] - optional override for if word-wrap should be applied to the text.\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {PIXI.TextMetrics} measured width and height of the text.\n     */\n\n\n    TextMetrics.measureText = function measureText(text, style, wordWrap) {\n        var canvas = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : TextMetrics._canvas;\n\n        wordWrap = wordWrap || style.wordWrap;\n        var font = style.toFontString();\n        var fontProperties = TextMetrics.measureFont(font);\n        var context = canvas.getContext('2d');\n\n        context.font = font;\n\n        var outputText = wordWrap ? TextMetrics.wordWrap(text, style, canvas) : text;\n        var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n        var lineWidths = new Array(lines.length);\n        var maxLineWidth = 0;\n\n        for (var i = 0; i < lines.length; i++) {\n            var lineWidth = context.measureText(lines[i]).width + (lines[i].length - 1) * style.letterSpacing;\n\n            lineWidths[i] = lineWidth;\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        var width = maxLineWidth + style.strokeThickness;\n\n        if (style.dropShadow) {\n            width += style.dropShadowDistance;\n        }\n\n        var lineHeight = style.lineHeight || fontProperties.fontSize + style.strokeThickness;\n        var height = Math.max(lineHeight, fontProperties.fontSize + style.strokeThickness) + (lines.length - 1) * (lineHeight + style.leading);\n\n        if (style.dropShadow) {\n            height += style.dropShadowDistance;\n        }\n\n        return new TextMetrics(text, style, width, height, lines, lineWidths, lineHeight + style.leading, maxLineWidth, fontProperties);\n    };\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @param {PIXI.TextStyle} style - the style to use when wrapping\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {string} New string with new lines applied where required\n     */\n\n\n    TextMetrics.wordWrap = function wordWrap(text, style) {\n        var canvas = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TextMetrics._canvas;\n\n        var context = canvas.getContext('2d');\n\n        var width = 0;\n        var line = '';\n        var lines = '';\n\n        var cache = {};\n        var letterSpacing = style.letterSpacing,\n            whiteSpace = style.whiteSpace;\n\n        // How to handle whitespaces\n\n        var collapseSpaces = TextMetrics.collapseSpaces(whiteSpace);\n        var collapseNewlines = TextMetrics.collapseNewlines(whiteSpace);\n\n        // whether or not spaces may be added to the beginning of lines\n        var canPrependSpaces = !collapseSpaces;\n\n        // There is letterSpacing after every char except the last one\n        // t_h_i_s_' '_i_s_' '_a_n_' '_e_x_a_m_p_l_e_' '_!\n        // so for convenience the above needs to be compared to width + 1 extra letterSpace\n        // t_h_i_s_' '_i_s_' '_a_n_' '_e_x_a_m_p_l_e_' '_!_\n        // ________________________________________________\n        // And then the final space is simply no appended to each line\n        var wordWrapWidth = style.wordWrapWidth + letterSpacing;\n\n        // break text into words, spaces and newline chars\n        var tokens = TextMetrics.tokenize(text);\n\n        for (var i = 0; i < tokens.length; i++) {\n            // get the word, space or newlineChar\n            var token = tokens[i];\n\n            // if word is a new line\n            if (TextMetrics.isNewline(token)) {\n                // keep the new line\n                if (!collapseNewlines) {\n                    lines += TextMetrics.addLine(line);\n                    canPrependSpaces = !collapseSpaces;\n                    line = '';\n                    width = 0;\n                    continue;\n                }\n\n                // if we should collapse new lines\n                // we simply convert it into a space\n                token = ' ';\n            }\n\n            // if we should collapse repeated whitespaces\n            if (collapseSpaces) {\n                // check both this and the last tokens for spaces\n                var currIsBreakingSpace = TextMetrics.isBreakingSpace(token);\n                var lastIsBreakingSpace = TextMetrics.isBreakingSpace(line[line.length - 1]);\n\n                if (currIsBreakingSpace && lastIsBreakingSpace) {\n                    continue;\n                }\n            }\n\n            // get word width from cache if possible\n            var tokenWidth = TextMetrics.getFromCache(token, letterSpacing, cache, context);\n\n            // word is longer than desired bounds\n            if (tokenWidth > wordWrapWidth) {\n                // if we are not already at the beginning of a line\n                if (line !== '') {\n                    // start newlines for overflow words\n                    lines += TextMetrics.addLine(line);\n                    line = '';\n                    width = 0;\n                }\n\n                // break large word over multiple lines\n                if (TextMetrics.canBreakWords(token, style.breakWords)) {\n                    // break word into characters\n                    var characters = token.split('');\n\n                    // loop the characters\n                    for (var j = 0; j < characters.length; j++) {\n                        var char = characters[j];\n\n                        var k = 1;\n                        // we are not at the end of the token\n\n                        while (characters[j + k]) {\n                            var nextChar = characters[j + k];\n                            var lastChar = char[char.length - 1];\n\n                            // should not split chars\n                            if (!TextMetrics.canBreakChars(lastChar, nextChar, token, j, style.breakWords)) {\n                                // combine chars & move forward one\n                                char += nextChar;\n                            } else {\n                                break;\n                            }\n\n                            k++;\n                        }\n\n                        j += char.length - 1;\n\n                        var characterWidth = TextMetrics.getFromCache(char, letterSpacing, cache, context);\n\n                        if (characterWidth + width > wordWrapWidth) {\n                            lines += TextMetrics.addLine(line);\n                            canPrependSpaces = false;\n                            line = '';\n                            width = 0;\n                        }\n\n                        line += char;\n                        width += characterWidth;\n                    }\n                }\n\n                // run word out of the bounds\n                else {\n                        // if there are words in this line already\n                        // finish that line and start a new one\n                        if (line.length > 0) {\n                            lines += TextMetrics.addLine(line);\n                            line = '';\n                            width = 0;\n                        }\n\n                        var isLastToken = i === tokens.length - 1;\n\n                        // give it its own line if it's not the end\n                        lines += TextMetrics.addLine(token, !isLastToken);\n                        canPrependSpaces = false;\n                        line = '';\n                        width = 0;\n                    }\n            }\n\n            // word could fit\n            else {\n                    // word won't fit because of existing words\n                    // start a new line\n                    if (tokenWidth + width > wordWrapWidth) {\n                        // if its a space we don't want it\n                        canPrependSpaces = false;\n\n                        // add a new line\n                        lines += TextMetrics.addLine(line);\n\n                        // start a new line\n                        line = '';\n                        width = 0;\n                    }\n\n                    // don't add spaces to the beginning of lines\n                    if (line.length > 0 || !TextMetrics.isBreakingSpace(token) || canPrependSpaces) {\n                        // add the word to the current line\n                        line += token;\n\n                        // update width counter\n                        width += tokenWidth;\n                    }\n                }\n        }\n\n        lines += TextMetrics.addLine(line, false);\n\n        return lines;\n    };\n\n    /**\n     * Convienience function for logging each line added during the wordWrap\n     * method\n     *\n     * @private\n     * @param  {string}   line        - The line of text to add\n     * @param  {boolean}  newLine     - Add new line character to end\n     * @return {string}   A formatted line\n     */\n\n\n    TextMetrics.addLine = function addLine(line) {\n        var newLine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        line = TextMetrics.trimRight(line);\n\n        line = newLine ? line + '\\n' : line;\n\n        return line;\n    };\n\n    /**\n     * Gets & sets the widths of calculated characters in a cache object\n     *\n     * @private\n     * @param  {string}                    key            The key\n     * @param  {number}                    letterSpacing  The letter spacing\n     * @param  {object}                    cache          The cache\n     * @param  {CanvasRenderingContext2D}  context        The canvas context\n     * @return {number}                    The from cache.\n     */\n\n\n    TextMetrics.getFromCache = function getFromCache(key, letterSpacing, cache, context) {\n        var width = cache[key];\n\n        if (width === undefined) {\n            var spacing = key.length * letterSpacing;\n\n            width = context.measureText(key).width + spacing;\n            cache[key] = width;\n        }\n\n        return width;\n    };\n\n    /**\n     * Determines whether we should collapse breaking spaces\n     *\n     * @private\n     * @param  {string}   whiteSpace  The TextStyle property whiteSpace\n     * @return {boolean}  should collapse\n     */\n\n\n    TextMetrics.collapseSpaces = function collapseSpaces(whiteSpace) {\n        return whiteSpace === 'normal' || whiteSpace === 'pre-line';\n    };\n\n    /**\n     * Determines whether we should collapse newLine chars\n     *\n     * @private\n     * @param  {string}   whiteSpace  The white space\n     * @return {boolean}  should collapse\n     */\n\n\n    TextMetrics.collapseNewlines = function collapseNewlines(whiteSpace) {\n        return whiteSpace === 'normal';\n    };\n\n    /**\n     * trims breaking whitespaces from string\n     *\n     * @private\n     * @param  {string}  text  The text\n     * @return {string}  trimmed string\n     */\n\n\n    TextMetrics.trimRight = function trimRight(text) {\n        if (typeof text !== 'string') {\n            return '';\n        }\n\n        for (var i = text.length - 1; i >= 0; i--) {\n            var char = text[i];\n\n            if (!TextMetrics.isBreakingSpace(char)) {\n                break;\n            }\n\n            text = text.slice(0, -1);\n        }\n\n        return text;\n    };\n\n    /**\n     * Determines if char is a newline.\n     *\n     * @private\n     * @param  {string}  char  The character\n     * @return {boolean}  True if newline, False otherwise.\n     */\n\n\n    TextMetrics.isNewline = function isNewline(char) {\n        if (typeof char !== 'string') {\n            return false;\n        }\n\n        return TextMetrics._newlines.indexOf(char.charCodeAt(0)) >= 0;\n    };\n\n    /**\n     * Determines if char is a breaking whitespace.\n     *\n     * @private\n     * @param  {string}  char  The character\n     * @return {boolean}  True if whitespace, False otherwise.\n     */\n\n\n    TextMetrics.isBreakingSpace = function isBreakingSpace(char) {\n        if (typeof char !== 'string') {\n            return false;\n        }\n\n        return TextMetrics._breakingSpaces.indexOf(char.charCodeAt(0)) >= 0;\n    };\n\n    /**\n     * Splits a string into words, breaking-spaces and newLine characters\n     *\n     * @private\n     * @param  {string}  text       The text\n     * @return {array}  A tokenized array\n     */\n\n\n    TextMetrics.tokenize = function tokenize(text) {\n        var tokens = [];\n        var token = '';\n\n        if (typeof text !== 'string') {\n            return tokens;\n        }\n\n        for (var i = 0; i < text.length; i++) {\n            var char = text[i];\n\n            if (TextMetrics.isBreakingSpace(char) || TextMetrics.isNewline(char)) {\n                if (token !== '') {\n                    tokens.push(token);\n                    token = '';\n                }\n\n                tokens.push(char);\n\n                continue;\n            }\n\n            token += char;\n        }\n\n        if (token !== '') {\n            tokens.push(token);\n        }\n\n        return tokens;\n    };\n\n    /**\n     * This method exists to be easily overridden\n     * It allows one to customise which words should break\n     * Examples are if the token is CJK or numbers.\n     * It must return a boolean.\n     *\n     * @private\n     * @param  {string}  token       The token\n     * @param  {boolean}  breakWords  The style attr break words\n     * @return {boolean} whether to break word or not\n     */\n\n\n    TextMetrics.canBreakWords = function canBreakWords(token, breakWords) {\n        return breakWords;\n    };\n\n    /**\n     * This method exists to be easily overridden\n     * It allows one to determine whether a pair of characters\n     * should be broken by newlines\n     * For example certain characters in CJK langs or numbers.\n     * It must return a boolean.\n     *\n     * @private\n     * @param  {string}  char      The character\n     * @param  {string}  nextChar  The next character\n     * @param  {string}  token     The token/word the characters are from\n     * @param  {number}  index     The index in the token of the char\n     * @param  {boolean}  breakWords  The style attr break words\n     * @return {boolean} whether to break word or not\n     */\n\n\n    TextMetrics.canBreakChars = function canBreakChars(char, nextChar, token, index, breakWords) // eslint-disable-line no-unused-vars\n    {\n        return true;\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given font-style\n     *\n     * @static\n     * @param {string} font - String representing the style of the font\n     * @return {PIXI.TextMetrics~FontMetrics} Font properties object\n     */\n\n\n    TextMetrics.measureFont = function measureFont(font) {\n        // as this method is used for preparing assets, don't recalculate things if we don't need to\n        if (TextMetrics._fonts[font]) {\n            return TextMetrics._fonts[font];\n        }\n\n        var properties = {};\n\n        var canvas = TextMetrics._canvas;\n        var context = TextMetrics._context;\n\n        context.font = font;\n\n        var metricsString = TextMetrics.METRICS_STRING + TextMetrics.BASELINE_SYMBOL;\n        var width = Math.ceil(context.measureText(metricsString).width);\n        var baseline = Math.ceil(context.measureText(TextMetrics.BASELINE_SYMBOL).width);\n        var height = 2 * baseline;\n\n        baseline = baseline * TextMetrics.BASELINE_MULTIPLIER | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = font;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText(metricsString, 0, baseline);\n\n        var imagedata = context.getImageData(0, 0, width, height).data;\n        var pixels = imagedata.length;\n        var line = width * 4;\n\n        var i = 0;\n        var idx = 0;\n        var stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for (i = 0; i < baseline; ++i) {\n            for (var j = 0; j < line; j += 4) {\n                if (imagedata[idx + j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n            if (!stop) {\n                idx += line;\n            } else {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for (i = height; i > baseline; --i) {\n            for (var _j = 0; _j < line; _j += 4) {\n                if (imagedata[idx + _j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (!stop) {\n                idx -= line;\n            } else {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        TextMetrics._fonts[font] = properties;\n\n        return properties;\n    };\n\n    /**\n     * Clear font metrics in metrics cache.\n     *\n     * @static\n     * @param {string} [font] - font name. If font name not set then clear cache for all fonts.\n     */\n\n\n    TextMetrics.clearMetrics = function clearMetrics() {\n        var font = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n        if (font) {\n            delete TextMetrics._fonts[font];\n        } else {\n            TextMetrics._fonts = {};\n        }\n    };\n\n    return TextMetrics;\n}();\n\n/**\n * Internal return object for {@link PIXI.TextMetrics.measureFont `TextMetrics.measureFont`}.\n * @class FontMetrics\n * @memberof PIXI.TextMetrics~\n * @property {number} ascent - The ascent distance\n * @property {number} descent - The descent distance\n * @property {number} fontSize - Font size from ascent to descent\n */\n\nexports.default = TextMetrics;\nvar canvas = document.createElement('canvas');\n\ncanvas.width = canvas.height = 10;\n\n/**\n * Cached canvas element for measuring text\n * @memberof PIXI.TextMetrics\n * @type {HTMLCanvasElement}\n * @private\n */\nTextMetrics._canvas = canvas;\n\n/**\n * Cache for context to use.\n * @memberof PIXI.TextMetrics\n * @type {CanvasRenderingContext2D}\n * @private\n */\nTextMetrics._context = canvas.getContext('2d');\n\n/**\n * Cache of PIXI.TextMetrics~FontMetrics objects.\n * @memberof PIXI.TextMetrics\n * @type {Object}\n * @private\n */\nTextMetrics._fonts = {};\n\n/**\n * String used for calculate font metrics.\n * @static\n * @memberof PIXI.TextMetrics\n * @name METRICS_STRING\n * @type {string}\n * @default |Éq\n */\nTextMetrics.METRICS_STRING = '|Éq';\n\n/**\n * Baseline symbol for calculate font metrics.\n * @static\n * @memberof PIXI.TextMetrics\n * @name BASELINE_SYMBOL\n * @type {string}\n * @default M\n */\nTextMetrics.BASELINE_SYMBOL = 'M';\n\n/**\n * Baseline multiplier for calculate font metrics.\n * @static\n * @memberof PIXI.TextMetrics\n * @name BASELINE_MULTIPLIER\n * @type {number}\n * @default 1.4\n */\nTextMetrics.BASELINE_MULTIPLIER = 1.4;\n\n/**\n * Cache of new line chars.\n * @memberof PIXI.TextMetrics\n * @type {number[]}\n * @private\n */\nTextMetrics._newlines = [0x000A, // line feed\n0x000D];\n\n/**\n * Cache of breaking spaces.\n * @memberof PIXI.TextMetrics\n * @type {number[]}\n * @private\n */\nTextMetrics._breakingSpaces = [0x0009, // character tabulation\n0x0020, // space\n0x2000, // en quad\n0x2001, // em quad\n0x2002, // en space\n0x2003, // em space\n0x2004, // three-per-em space\n0x2005, // four-per-em space\n0x2006, // six-per-em space\n0x2008, // punctuation space\n0x2009, // thin space\n0x200A, // hair space\n0x205F, // medium mathematical space\n0x3000];\n//# sourceMappingURL=TextMetrics.js.map","map":{"mappings":[{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}}],"sources":{"node_modules/pixi.js/lib/core/text/TextMetrics.js":"'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The TextMetrics object represents the measurement of a block of text with a specified style.\n *\n * ```js\n * let style = new PIXI.TextStyle({fontFamily : 'Arial', fontSize: 24, fill : 0xff1010, align : 'center'})\n * let textMetrics = PIXI.TextMetrics.measureText('Your text', style)\n * ```\n *\n * @class\n * @memberOf PIXI\n */\nvar TextMetrics = function () {\n    /**\n     * @param {string} text - the text that was measured\n     * @param {PIXI.TextStyle} style - the style that was measured\n     * @param {number} width - the measured width of the text\n     * @param {number} height - the measured height of the text\n     * @param {array} lines - an array of the lines of text broken by new lines and wrapping if specified in style\n     * @param {array} lineWidths - an array of the line widths for each line matched to `lines`\n     * @param {number} lineHeight - the measured line height for this style\n     * @param {number} maxLineWidth - the maximum line width for all measured lines\n     * @param {Object} fontProperties - the font properties object from TextMetrics.measureFont\n     */\n    function TextMetrics(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n        _classCallCheck(this, TextMetrics);\n\n        this.text = text;\n        this.style = style;\n        this.width = width;\n        this.height = height;\n        this.lines = lines;\n        this.lineWidths = lineWidths;\n        this.lineHeight = lineHeight;\n        this.maxLineWidth = maxLineWidth;\n        this.fontProperties = fontProperties;\n    }\n\n    /**\n     * Measures the supplied string of text and returns a Rectangle.\n     *\n     * @param {string} text - the text to measure.\n     * @param {PIXI.TextStyle} style - the text style to use for measuring\n     * @param {boolean} [wordWrap] - optional override for if word-wrap should be applied to the text.\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {PIXI.TextMetrics} measured width and height of the text.\n     */\n\n\n    TextMetrics.measureText = function measureText(text, style, wordWrap) {\n        var canvas = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : TextMetrics._canvas;\n\n        wordWrap = wordWrap || style.wordWrap;\n        var font = style.toFontString();\n        var fontProperties = TextMetrics.measureFont(font);\n        var context = canvas.getContext('2d');\n\n        context.font = font;\n\n        var outputText = wordWrap ? TextMetrics.wordWrap(text, style, canvas) : text;\n        var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n        var lineWidths = new Array(lines.length);\n        var maxLineWidth = 0;\n\n        for (var i = 0; i < lines.length; i++) {\n            var lineWidth = context.measureText(lines[i]).width + (lines[i].length - 1) * style.letterSpacing;\n\n            lineWidths[i] = lineWidth;\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        var width = maxLineWidth + style.strokeThickness;\n\n        if (style.dropShadow) {\n            width += style.dropShadowDistance;\n        }\n\n        var lineHeight = style.lineHeight || fontProperties.fontSize + style.strokeThickness;\n        var height = Math.max(lineHeight, fontProperties.fontSize + style.strokeThickness) + (lines.length - 1) * (lineHeight + style.leading);\n\n        if (style.dropShadow) {\n            height += style.dropShadowDistance;\n        }\n\n        return new TextMetrics(text, style, width, height, lines, lineWidths, lineHeight + style.leading, maxLineWidth, fontProperties);\n    };\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @param {PIXI.TextStyle} style - the style to use when wrapping\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {string} New string with new lines applied where required\n     */\n\n\n    TextMetrics.wordWrap = function wordWrap(text, style) {\n        var canvas = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TextMetrics._canvas;\n\n        var context = canvas.getContext('2d');\n\n        var width = 0;\n        var line = '';\n        var lines = '';\n\n        var cache = {};\n        var letterSpacing = style.letterSpacing,\n            whiteSpace = style.whiteSpace;\n\n        // How to handle whitespaces\n\n        var collapseSpaces = TextMetrics.collapseSpaces(whiteSpace);\n        var collapseNewlines = TextMetrics.collapseNewlines(whiteSpace);\n\n        // whether or not spaces may be added to the beginning of lines\n        var canPrependSpaces = !collapseSpaces;\n\n        // There is letterSpacing after every char except the last one\n        // t_h_i_s_' '_i_s_' '_a_n_' '_e_x_a_m_p_l_e_' '_!\n        // so for convenience the above needs to be compared to width + 1 extra letterSpace\n        // t_h_i_s_' '_i_s_' '_a_n_' '_e_x_a_m_p_l_e_' '_!_\n        // ________________________________________________\n        // And then the final space is simply no appended to each line\n        var wordWrapWidth = style.wordWrapWidth + letterSpacing;\n\n        // break text into words, spaces and newline chars\n        var tokens = TextMetrics.tokenize(text);\n\n        for (var i = 0; i < tokens.length; i++) {\n            // get the word, space or newlineChar\n            var token = tokens[i];\n\n            // if word is a new line\n            if (TextMetrics.isNewline(token)) {\n                // keep the new line\n                if (!collapseNewlines) {\n                    lines += TextMetrics.addLine(line);\n                    canPrependSpaces = !collapseSpaces;\n                    line = '';\n                    width = 0;\n                    continue;\n                }\n\n                // if we should collapse new lines\n                // we simply convert it into a space\n                token = ' ';\n            }\n\n            // if we should collapse repeated whitespaces\n            if (collapseSpaces) {\n                // check both this and the last tokens for spaces\n                var currIsBreakingSpace = TextMetrics.isBreakingSpace(token);\n                var lastIsBreakingSpace = TextMetrics.isBreakingSpace(line[line.length - 1]);\n\n                if (currIsBreakingSpace && lastIsBreakingSpace) {\n                    continue;\n                }\n            }\n\n            // get word width from cache if possible\n            var tokenWidth = TextMetrics.getFromCache(token, letterSpacing, cache, context);\n\n            // word is longer than desired bounds\n            if (tokenWidth > wordWrapWidth) {\n                // if we are not already at the beginning of a line\n                if (line !== '') {\n                    // start newlines for overflow words\n                    lines += TextMetrics.addLine(line);\n                    line = '';\n                    width = 0;\n                }\n\n                // break large word over multiple lines\n                if (TextMetrics.canBreakWords(token, style.breakWords)) {\n                    // break word into characters\n                    var characters = token.split('');\n\n                    // loop the characters\n                    for (var j = 0; j < characters.length; j++) {\n                        var char = characters[j];\n\n                        var k = 1;\n                        // we are not at the end of the token\n\n                        while (characters[j + k]) {\n                            var nextChar = characters[j + k];\n                            var lastChar = char[char.length - 1];\n\n                            // should not split chars\n                            if (!TextMetrics.canBreakChars(lastChar, nextChar, token, j, style.breakWords)) {\n                                // combine chars & move forward one\n                                char += nextChar;\n                            } else {\n                                break;\n                            }\n\n                            k++;\n                        }\n\n                        j += char.length - 1;\n\n                        var characterWidth = TextMetrics.getFromCache(char, letterSpacing, cache, context);\n\n                        if (characterWidth + width > wordWrapWidth) {\n                            lines += TextMetrics.addLine(line);\n                            canPrependSpaces = false;\n                            line = '';\n                            width = 0;\n                        }\n\n                        line += char;\n                        width += characterWidth;\n                    }\n                }\n\n                // run word out of the bounds\n                else {\n                        // if there are words in this line already\n                        // finish that line and start a new one\n                        if (line.length > 0) {\n                            lines += TextMetrics.addLine(line);\n                            line = '';\n                            width = 0;\n                        }\n\n                        var isLastToken = i === tokens.length - 1;\n\n                        // give it its own line if it's not the end\n                        lines += TextMetrics.addLine(token, !isLastToken);\n                        canPrependSpaces = false;\n                        line = '';\n                        width = 0;\n                    }\n            }\n\n            // word could fit\n            else {\n                    // word won't fit because of existing words\n                    // start a new line\n                    if (tokenWidth + width > wordWrapWidth) {\n                        // if its a space we don't want it\n                        canPrependSpaces = false;\n\n                        // add a new line\n                        lines += TextMetrics.addLine(line);\n\n                        // start a new line\n                        line = '';\n                        width = 0;\n                    }\n\n                    // don't add spaces to the beginning of lines\n                    if (line.length > 0 || !TextMetrics.isBreakingSpace(token) || canPrependSpaces) {\n                        // add the word to the current line\n                        line += token;\n\n                        // update width counter\n                        width += tokenWidth;\n                    }\n                }\n        }\n\n        lines += TextMetrics.addLine(line, false);\n\n        return lines;\n    };\n\n    /**\n     * Convienience function for logging each line added during the wordWrap\n     * method\n     *\n     * @private\n     * @param  {string}   line        - The line of text to add\n     * @param  {boolean}  newLine     - Add new line character to end\n     * @return {string}   A formatted line\n     */\n\n\n    TextMetrics.addLine = function addLine(line) {\n        var newLine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        line = TextMetrics.trimRight(line);\n\n        line = newLine ? line + '\\n' : line;\n\n        return line;\n    };\n\n    /**\n     * Gets & sets the widths of calculated characters in a cache object\n     *\n     * @private\n     * @param  {string}                    key            The key\n     * @param  {number}                    letterSpacing  The letter spacing\n     * @param  {object}                    cache          The cache\n     * @param  {CanvasRenderingContext2D}  context        The canvas context\n     * @return {number}                    The from cache.\n     */\n\n\n    TextMetrics.getFromCache = function getFromCache(key, letterSpacing, cache, context) {\n        var width = cache[key];\n\n        if (width === undefined) {\n            var spacing = key.length * letterSpacing;\n\n            width = context.measureText(key).width + spacing;\n            cache[key] = width;\n        }\n\n        return width;\n    };\n\n    /**\n     * Determines whether we should collapse breaking spaces\n     *\n     * @private\n     * @param  {string}   whiteSpace  The TextStyle property whiteSpace\n     * @return {boolean}  should collapse\n     */\n\n\n    TextMetrics.collapseSpaces = function collapseSpaces(whiteSpace) {\n        return whiteSpace === 'normal' || whiteSpace === 'pre-line';\n    };\n\n    /**\n     * Determines whether we should collapse newLine chars\n     *\n     * @private\n     * @param  {string}   whiteSpace  The white space\n     * @return {boolean}  should collapse\n     */\n\n\n    TextMetrics.collapseNewlines = function collapseNewlines(whiteSpace) {\n        return whiteSpace === 'normal';\n    };\n\n    /**\n     * trims breaking whitespaces from string\n     *\n     * @private\n     * @param  {string}  text  The text\n     * @return {string}  trimmed string\n     */\n\n\n    TextMetrics.trimRight = function trimRight(text) {\n        if (typeof text !== 'string') {\n            return '';\n        }\n\n        for (var i = text.length - 1; i >= 0; i--) {\n            var char = text[i];\n\n            if (!TextMetrics.isBreakingSpace(char)) {\n                break;\n            }\n\n            text = text.slice(0, -1);\n        }\n\n        return text;\n    };\n\n    /**\n     * Determines if char is a newline.\n     *\n     * @private\n     * @param  {string}  char  The character\n     * @return {boolean}  True if newline, False otherwise.\n     */\n\n\n    TextMetrics.isNewline = function isNewline(char) {\n        if (typeof char !== 'string') {\n            return false;\n        }\n\n        return TextMetrics._newlines.indexOf(char.charCodeAt(0)) >= 0;\n    };\n\n    /**\n     * Determines if char is a breaking whitespace.\n     *\n     * @private\n     * @param  {string}  char  The character\n     * @return {boolean}  True if whitespace, False otherwise.\n     */\n\n\n    TextMetrics.isBreakingSpace = function isBreakingSpace(char) {\n        if (typeof char !== 'string') {\n            return false;\n        }\n\n        return TextMetrics._breakingSpaces.indexOf(char.charCodeAt(0)) >= 0;\n    };\n\n    /**\n     * Splits a string into words, breaking-spaces and newLine characters\n     *\n     * @private\n     * @param  {string}  text       The text\n     * @return {array}  A tokenized array\n     */\n\n\n    TextMetrics.tokenize = function tokenize(text) {\n        var tokens = [];\n        var token = '';\n\n        if (typeof text !== 'string') {\n            return tokens;\n        }\n\n        for (var i = 0; i < text.length; i++) {\n            var char = text[i];\n\n            if (TextMetrics.isBreakingSpace(char) || TextMetrics.isNewline(char)) {\n                if (token !== '') {\n                    tokens.push(token);\n                    token = '';\n                }\n\n                tokens.push(char);\n\n                continue;\n            }\n\n            token += char;\n        }\n\n        if (token !== '') {\n            tokens.push(token);\n        }\n\n        return tokens;\n    };\n\n    /**\n     * This method exists to be easily overridden\n     * It allows one to customise which words should break\n     * Examples are if the token is CJK or numbers.\n     * It must return a boolean.\n     *\n     * @private\n     * @param  {string}  token       The token\n     * @param  {boolean}  breakWords  The style attr break words\n     * @return {boolean} whether to break word or not\n     */\n\n\n    TextMetrics.canBreakWords = function canBreakWords(token, breakWords) {\n        return breakWords;\n    };\n\n    /**\n     * This method exists to be easily overridden\n     * It allows one to determine whether a pair of characters\n     * should be broken by newlines\n     * For example certain characters in CJK langs or numbers.\n     * It must return a boolean.\n     *\n     * @private\n     * @param  {string}  char      The character\n     * @param  {string}  nextChar  The next character\n     * @param  {string}  token     The token/word the characters are from\n     * @param  {number}  index     The index in the token of the char\n     * @param  {boolean}  breakWords  The style attr break words\n     * @return {boolean} whether to break word or not\n     */\n\n\n    TextMetrics.canBreakChars = function canBreakChars(char, nextChar, token, index, breakWords) // eslint-disable-line no-unused-vars\n    {\n        return true;\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given font-style\n     *\n     * @static\n     * @param {string} font - String representing the style of the font\n     * @return {PIXI.TextMetrics~FontMetrics} Font properties object\n     */\n\n\n    TextMetrics.measureFont = function measureFont(font) {\n        // as this method is used for preparing assets, don't recalculate things if we don't need to\n        if (TextMetrics._fonts[font]) {\n            return TextMetrics._fonts[font];\n        }\n\n        var properties = {};\n\n        var canvas = TextMetrics._canvas;\n        var context = TextMetrics._context;\n\n        context.font = font;\n\n        var metricsString = TextMetrics.METRICS_STRING + TextMetrics.BASELINE_SYMBOL;\n        var width = Math.ceil(context.measureText(metricsString).width);\n        var baseline = Math.ceil(context.measureText(TextMetrics.BASELINE_SYMBOL).width);\n        var height = 2 * baseline;\n\n        baseline = baseline * TextMetrics.BASELINE_MULTIPLIER | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = font;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText(metricsString, 0, baseline);\n\n        var imagedata = context.getImageData(0, 0, width, height).data;\n        var pixels = imagedata.length;\n        var line = width * 4;\n\n        var i = 0;\n        var idx = 0;\n        var stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for (i = 0; i < baseline; ++i) {\n            for (var j = 0; j < line; j += 4) {\n                if (imagedata[idx + j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n            if (!stop) {\n                idx += line;\n            } else {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for (i = height; i > baseline; --i) {\n            for (var _j = 0; _j < line; _j += 4) {\n                if (imagedata[idx + _j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (!stop) {\n                idx -= line;\n            } else {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        TextMetrics._fonts[font] = properties;\n\n        return properties;\n    };\n\n    /**\n     * Clear font metrics in metrics cache.\n     *\n     * @static\n     * @param {string} [font] - font name. If font name not set then clear cache for all fonts.\n     */\n\n\n    TextMetrics.clearMetrics = function clearMetrics() {\n        var font = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n        if (font) {\n            delete TextMetrics._fonts[font];\n        } else {\n            TextMetrics._fonts = {};\n        }\n    };\n\n    return TextMetrics;\n}();\n\n/**\n * Internal return object for {@link PIXI.TextMetrics.measureFont `TextMetrics.measureFont`}.\n * @class FontMetrics\n * @memberof PIXI.TextMetrics~\n * @property {number} ascent - The ascent distance\n * @property {number} descent - The descent distance\n * @property {number} fontSize - Font size from ascent to descent\n */\n\nexports.default = TextMetrics;\nvar canvas = document.createElement('canvas');\n\ncanvas.width = canvas.height = 10;\n\n/**\n * Cached canvas element for measuring text\n * @memberof PIXI.TextMetrics\n * @type {HTMLCanvasElement}\n * @private\n */\nTextMetrics._canvas = canvas;\n\n/**\n * Cache for context to use.\n * @memberof PIXI.TextMetrics\n * @type {CanvasRenderingContext2D}\n * @private\n */\nTextMetrics._context = canvas.getContext('2d');\n\n/**\n * Cache of PIXI.TextMetrics~FontMetrics objects.\n * @memberof PIXI.TextMetrics\n * @type {Object}\n * @private\n */\nTextMetrics._fonts = {};\n\n/**\n * String used for calculate font metrics.\n * @static\n * @memberof PIXI.TextMetrics\n * @name METRICS_STRING\n * @type {string}\n * @default |Éq\n */\nTextMetrics.METRICS_STRING = '|Éq';\n\n/**\n * Baseline symbol for calculate font metrics.\n * @static\n * @memberof PIXI.TextMetrics\n * @name BASELINE_SYMBOL\n * @type {string}\n * @default M\n */\nTextMetrics.BASELINE_SYMBOL = 'M';\n\n/**\n * Baseline multiplier for calculate font metrics.\n * @static\n * @memberof PIXI.TextMetrics\n * @name BASELINE_MULTIPLIER\n * @type {number}\n * @default 1.4\n */\nTextMetrics.BASELINE_MULTIPLIER = 1.4;\n\n/**\n * Cache of new line chars.\n * @memberof PIXI.TextMetrics\n * @type {number[]}\n * @private\n */\nTextMetrics._newlines = [0x000A, // line feed\n0x000D];\n\n/**\n * Cache of breaking spaces.\n * @memberof PIXI.TextMetrics\n * @type {number[]}\n * @private\n */\nTextMetrics._breakingSpaces = [0x0009, // character tabulation\n0x0020, // space\n0x2000, // en quad\n0x2001, // em quad\n0x2002, // en space\n0x2003, // em space\n0x2004, // three-per-em space\n0x2005, // four-per-em space\n0x2006, // six-per-em space\n0x2008, // punctuation space\n0x2009, // thin space\n0x200A, // hair space\n0x205F, // medium mathematical space\n0x3000];\n//# sourceMappingURL=TextMetrics.js.map"},"lineCount":699}},"hash":"457121b0a1e47907fbd3f0e66b2fafef","cacheData":{"env":{}}}